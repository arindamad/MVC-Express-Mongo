{"version":3,"file":"static/js/240.614cd3fd.chunk.js","mappings":"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","sources":["views/product/Create.js"],"sourcesContent":["import { CButton, CCard, CCardBody, CCol, CForm, CFormCheck, CFormInput, CFormSelect, CFormText, CFormTextarea, CInputGroupText, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CNav, CNavItem, CNavLink, CRow, CTabContent, CTabPane, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\nimport React, { useEffect } from 'react'\nimport noImage from '../../assets/images/no-img.jpg';\n\nimport { EditorState, convertToRaw} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { useState } from 'react';\nimport CIcon from '@coreui/icons-react';\nimport { cilPencil, cilPlus, cilTrash, cilX } from '@coreui/icons';\nimport \"./product.scss\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { json, useNavigate } from 'react-router-dom';\nimport { CustomTabs } from 'src/components';\n\n\n\nconst CategoryCreate = () => {\n  const Navigate =  useNavigate();\n  const [selectedImage, setSelectedImage] = useState({});\n  const [gallery, setSelectedGallery] = useState(null);\n  const [productVarition, setProductVarition] = useState(false);\n  const [attr, setAttr] = useState([]);\n  const [sprops, setProps] = useState('');\n  const [svalue, setValue] = useState('');\n  const [brands, setBrands]= useState([]);\n  const [category, setCateogy]= useState([]);\n  const [error, setError] = useState({});\n  const [images, setImages] = useState([]);\n  const [totalProduct, setTotalProduct] = useState([]);\n  const [fProduct, setFProduct] = useState([]);\n  const [selectedProd, setSelectedProd] = useState([]);  \n\nconst handelSearch = (e) =>{\n  const regexPattern = new RegExp('^'+e.target.value, 'ig');\n  const filteredProduct =  totalProduct.filter((i)=>i.product_name.match(regexPattern));\n  setFProduct(filteredProduct);\n  setProdVisible(true)\n}\n\n\nconst handleSelectProd = (e) => {   \n    setSelectedProd((prevSelectedProd) => [...prevSelectedProd, e]);\n    setTotalProduct(prevSelected =>prevSelected.filter(item => item._id !== e._id));\n    setProdVisible(false)\n}\n\nconst [prodVisible, setProdVisible] = useState(true);\nconst handleDeleteProd = (e) => { \n  setTotalProduct((prevSelectedProd) => [...prevSelectedProd, e]);\n  setSelectedProd(prevSelected =>prevSelected.filter(item => item._id !== e._id));\n};\n\n\nuseEffect(() => {  \n  let url =  process.env.REACT_APP_API_URL+\"product/list\"\n  fetch(url, {\n    method: 'POST',\n    redirect: 'follow'\n  })\n  .then(response => response.json())\n  .then(result => {setTotalProduct(result.data)})\n  .catch(error => console.log('error', error));\n\n}, []);\n\n\n\n  \n\n\n  \n  const handleImageChange2 = (event) => {\n    const files = event.target.files;\n  \n    if (files.length > 0) {\n      const filePromises = Array.from(files).map((file) => {\n        // Create a separate FormData for each file\n        const formData = new FormData();\n        formData.append(\"image\", file, file.name);\n        formData.append(\"type\", \"image\");\n  \n        const requestOptions = {\n          method: 'POST',\n          body: formData,\n          redirect: 'follow'\n        };\n  \n        // Make separate API calls for each file\n        return fetch(process.env.REACT_APP_API_URL + \"images/add\", requestOptions)\n          .then(response => response.json())\n          .catch(error => {\n            console.log('error', error);\n            return null; // Return null if an error occurs during the API call\n          });\n      });  \n     \n      Promise.all(filePromises).then((responses) => {       \n        const validResponses = responses.filter(response => response !== null).map(i=>i.data);\n        console.log(validResponses);\n        setSelectedGallery(validResponses);\n      });\n    } else {\n      setSelectedGallery([]);\n    }\n  };\n  \n  \n\n  const [editorState, setEditorState] = useState(\n    () => EditorState.createEmpty(), \n  );\nconst handelSubmit = (e)=>{\n    e.preventDefault();\n    \n    const [productName, productSku, productBrand, productCategory, shortDescription,  form_check, url,  status] = e.target;\n    \n    let hasError  = false;\n    const error  = {};\n    console.log(productName, productSku, productBrand, productCategory, shortDescription,  form_check,  url, status)\n    const data = {\n      product_name: productName.value,\n      sku: productSku.value,\n      short_description: shortDescription.value,        \n      brand:productBrand.value,\n      category: productCategory.value,\n      status: parseInt(status.value),\n      product_url: url.value,\n      photo: selectedImage._id,\n      photo_gallery: gallery ? gallery.map(i=>i._id) : [],\n      relatedProducts: selectedProd ? selectedProd.map(i=>i._id) : [],\n    }\n    console.log(JSON.stringify(data));\n\n    if(!data.product_name){\n      error['product-name'] = \"Please add a product Name\";\n      hasError = true;\n    }\n    if(!data.short_description){\n      error[\"description\"]=\"Please add Short description\";\n      hasError = true;\n    } \n\n    if(!data.brand){\n      error['product-brand'] = \"Please select a Brand Name\";\n      hasError = true;\n    }\n    if(!data.category){\n      error[\"product-category\"]=\"Please select product category\";\n      hasError = true;\n    }\n\n    setError(error)\n\n\n\n   if(!hasError){\n    fetch(process.env.REACT_APP_API_URL+\"product/create\", {\n      method: 'POST',\n      headers:{\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data),\n      redirect: 'follow'\n    })\n    .then(response => response.json())\n    .then(result => {\n      if(result.status==200){\n        toast.success(result.message);\n        setTimeout(()=>{\n          Navigate(\"/products\")\n        }, 3000)\n      }\n    })\n    .catch(error => console.log('error', error));\n  }\n  }\n\n  // const handleAdd = () => {\n  //   if (sprops && svalue) {\n  //     setAttr((prev) => [...prev, { sProp: sprops, sValue: svalue }]);\n  //     setProps('');\n  //     setValue('');\n  //   } else {\n  //     toast.error('Please enter empty fields.');\n  //   }\n  // };\n  \n\n\n  useEffect(()=>{ \n      let url =  process.env.REACT_APP_API_URL+\"brand/list\"\n      fetch(url, {\n        method: 'POST',\n        redirect: 'follow'\n      })\n      .then(response => response.json())\n      .then(result => {setBrands(result.data) })\n      .catch(error => console.log('error', error));\n\n      let url2 =  process.env.REACT_APP_API_URL+\"category/list\"\n      fetch(url2, {\n        method: 'POST',\n        redirect: 'follow'\n      })\n        .then(response => response.json())\n        .then(result => {setCateogy(result.data) })\n        .catch(error => console.log('error', error));\n  }, [])\n\n\n\n\n\n\n \n\n  const [selectedImages, setSelectedImages] = useState([]);\n\n  const handleImageSelect = (imageId) => {\n    if (selectedImages.includes(imageId)) {\n      setSelectedImages(prevSelectedImages =>\n        prevSelectedImages.filter(id => id !== imageId)\n      );\n    } else {\n      setSelectedImages(prevSelectedImages => [...prevSelectedImages, imageId]);\n    }\n  };\n\n  // Handle image upload here\n  const handleImageUpload = (fileInput) => {\n    var formdata = new FormData();\n    formdata.append(\"image\", fileInput.files[0], fileInput.files[0].name);\n    formdata.append(\"type\", \"image\");\n\n    var requestOptions = {\n      method: 'POST',\n      body: formdata,\n      redirect: 'follow'\n    };\n\n    fetch(process.env.REACT_APP_API_URL + \"images/add\", requestOptions)\n      .then(response => response.json())\n      .then(result => {console.log(result); setSelectedImage(result.data)})\n      .catch(error => console.log('error', error));\n  };\n\n  useEffect(() => {\n    let url = process.env.REACT_APP_API_URL + \"images/list\";\n    fetch(url, {\n      method: 'POST',\n      redirect: 'follow'\n    })\n      .then(response => response.json())\n      .then(result => {\n        setImages(result.data);\n        // Update the tabsData with the latest images\n        setTabsData(prevTabsData => {\n          const updatedTabsData = prevTabsData.map(tab => {\n            if (tab.id === 2) {\n              return {\n                ...tab,\n                content: (\n                  <div>\n                    <CRow>\n                      {result.data.map((item, key) => (\n                        <CCol key={key} lg={2}>\n                          <img src={process.env.REACT_APP_BASE_URL+item.image} alt={`Image ${key}`}  style={{maxWidth:\"100%\"}}/>\n                          <label>\n                          <input\n                            type=\"checkbox\"                            \n                          />\n                          Select\n                        </label>\n                        </CCol>\n                      ))}\n                    </CRow>\n                  </div>\n                )\n              };\n            }\n            return tab;\n          });\n          return updatedTabsData;\n        });\n      })\n      .catch(error => console.log('error', error));\n  }, []);\n\n  const [tabsData, setTabsData] = useState([\n    {\n      id: 1,\n      label: 'Upload files',\n      content: (\n        <div>\n          <h3>Drop files to upload</h3>\n          <p>or</p>          \n          <CButton>Select Files</CButton>\n        </div>\n      ),\n    },\n    {\n      id: 2,\n      label: 'Media Library',\n      content: (\n        <div>\n          <CRow></CRow>          \n        </div>\n      ),\n    }\n  ]);\n\n      \n  return (\n    <>  \n    <ToastContainer />\n    <h1 className='headingType1 text-center mb-4'>Add New Product</h1>\n      <CCard >            \n          <CCardBody className='p-5'>\n              \n              <CForm onSubmit={handelSubmit}>\n                <CRow className='g-4'>\n                  <CCol lg={8}>   \n                    <CRow>\n                      <CCol lg={6} className='mb-4'>\n                        <CFormInput placeholder='Product Name' label=\"Product Name\" name='product-name'/>\n                        <div className='hasError'>{error['product-name']}</div>\n                      </CCol>\n                      <CCol lg={6} className='mb-4'>                \n                        <CFormInput placeholder='Sku' label=\"Sku\" name='product-sku'/>                        \n                      </CCol>\n                      <CCol lg={4} className='mb-4'>             \n                          <CFormSelect name='product-brand' label=\"Select Brand\">\n                            <option value={\"\"}>Select Brand</option>\n                            {brands.map((item, key)=>(\n                              <option key={key} value={item._id}>{item.brand_name}</option>\n                            ))}                           \n                          </CFormSelect>\n                          <div className='hasError'>{error[\"product-brand\"]}</div>\n                      </CCol>\n                      <CCol lg={4} className='mb-4'>                  \n                          <CFormSelect name='product-category' label=\"Select Category\">\n                            <option value={\"\"}>Select Category</option>\n                            {category.map((item, key)=>(\n                              <option key={key} value={item._id}>{item.name}</option>\n                            ))}                            \n                          </CFormSelect>\n                          <div className='hasError'>{error[\"product-category\"]}</div>\n                      </CCol>\n                      <CCol lg={4} className='mb-4'>   \n                          {/* <label>Select Category</label>                     \n                          <CFormSelect>\n                            <option>Select Category</option>\n                          </CFormSelect> */}\n                      </CCol>\n                      <CCol lg={12} className='mb-4'>                \n                        <CFormTextarea placeholder='Description' label=\"Description\" name='short-description' rows={5}/>\n                        <div className='hasError'>{error[\"short_description\"]}</div>\n                      </CCol>\n                      <CCol lg={12} className='mb-4'> \n                        {/* <label className='form-label'>Long Description</label>\n                        <Editor\n                          editorState={editorState}\n                          onEditorStateChange={setEditorState}\n                        />    */}\n                        <div className=\"\">\n                          <label className='form-label '>Related Product</label>\n                          <ul className='selectedProducts'>\n                            {selectedProd.map((item,  key)=>(\n                              <li  key={key}><span> {item.product_name} <CIcon icon={cilX}  onClick={()=>handleDeleteProd(item)}/></span></li>\n                            ))}                            \n                          </ul>\n                          <div>\n                              <CFormInput type='text' placeholder='Search Related Product...' onChange={handelSearch}/>\n                              {prodVisible&& \n                              <ul className='searchReference'>\n                                {fProduct.map((item, key)=>(\n                                  <li key={key} onClick={()=>handleSelectProd(item)}>\n                                    <label>{item.product_name}</label>                                    \n                                  </li>                                  \n                                ))}\n                              </ul>}\n                          </div>\n                        </div>\n                      </CCol>\n                      {/* <CCol lg={6} className='mb-4'>                 \n                          <CFormInput type=\"file\" label=\"Video\" name='video'/>\n                      </CCol> */}\n                      <CCol lg={8} className='mb-4'>                                       \n                        <CFormInput type='text' label=\"Product Url\"/>\n                      </CCol>\n                      <CCol lg={4} className='mb-4'>                                       \n                        <CFormSelect name='status' label=\"Status\">\n                          <option value={\"1\"}>Active</option>\n                          <option value={\"0\"}>Inactive</option>\n                        </CFormSelect>\n                      </CCol>\n                      \n                        {/* <h5 className='mb-3 '>Specifications</h5> */}\n                        {/* <CTable bordered > \n                          <CTableHead>\n                            <CTableRow>\n                              <CTableHeaderCell>\n                                Property\n                              </CTableHeaderCell>\n                              <CTableHeaderCell>\n                                Value\n                              </CTableHeaderCell>\n                              <CTableHeaderCell>\n                                Edit\n                              </CTableHeaderCell>\n                            </CTableRow>\n                          </CTableHead>    \n                          <CTableBody>            \n                            {attr.map((i, key)=>(                            \n                                <CTableRow key={key}>\n                                  <CTableDataCell lg=\"true\">\n                                    {i.sProp}\n                                  </CTableDataCell>\n                                  <CTableDataCell lg=\"true\">\n                                    {i.sValue}\n                                  </CTableDataCell>\n                                  <CTableDataCell lg={\"auto\"} width={50}>\n                                    <div className='arInputWrapper'>\n                                      <CIcon icon={cilPencil} width={16} />\n                                    </div>\n                                  </CTableDataCell>\n                                </CTableRow>                           \n                            ))}\n                          </CTableBody>     \n                        </CTable> */}\n\n                      \n                        \n                        {/* <div className='each_attr_Wrap'>\n                          <CRow>\n                            <CCol lg>\n                              <CFormInput placeholder='Attribute Name' onChange={i=>setProps(i.target.value)} value={sprops}/>\n                            </CCol>\n                            <CCol lg>\n                              <CFormInput placeholder='Attribute Value' onChange={i=>setValue(i.target.value)} value={svalue}/>\n                            </CCol>\n                            <CCol lg={\"auto\"}>\n                              <CButton color='success' onClick={handleAdd}><CIcon icon={cilPlus} width={16} />Add Attribute</CButton>\n                            </CCol>\n                          </CRow>\n                        </div> */}\n                        \n\n                        \n\n                   \n          \n\n\n                    </CRow> \n                  </CCol>\n                  <CCol lg={4}>\n                    <div className='mb-4'>\n                      <h5>Product Image</h5>\n                      \n                      <div className='profileImage'>\n                        <img src={selectedImage.image?process.env.REACT_APP_BASE_URL+selectedImage.image:noImage} width={'100%'} className='mb-3'/> \n                        <CFormInput type='file' onChange={(i)=>handleImageUpload(i.target)}/> \n                      </div>\n                      <CFormText component=\"span\" id=\"exampleFormControlInputHelpInline\">\n                      Product Image must be 1200px X 12000px and ( 72dpi if possible) \n                      </CFormText>\n                      \n\n                      {/* <CFormInput type='file' onChange={handleImageChange} name='profileImage' /> */}\n                    </div>\n                    <h5>Product Thumnails</h5>\n                    <ul className='arGalleryImg'> \n                      {gallery?.map((item, index) => (\n                        <li key={index}>\n                          <img  src={process.env.REACT_APP_BASE_URL+item.image} alt={item.name} />\n                        </li>\n                      ))}\n                      <li>\n                        <label htmlFor='myGallery' className='addGallery'>\n                          <CIcon icon={cilPlus}  />\n                        </label>\n                        <CFormInput id='myGallery' multiple={true} type='file' onChange={handleImageChange2} name='myGallery' />\n                      </li>\n                    </ul>\n                    <CFormText component=\"span\" id=\"exampleFormControlInputHelpInline\">\n                      Product Thumnails must be 1200px X 12000px and ( 72dpi if possible) \n                    </CFormText>\n                  </CCol>\n                  <CCol lg={12}  className='text-center'>\n                    <CButton color='primary' className='py-2 px-5' type='submit'>Submit</CButton>\n                  </CCol>\n                </CRow>\n              </CForm>\n          </CCardBody>\n      </CCard>\n      \n    </>\n  )\n}\n\nexport default CategoryCreate;\n"],"names":["Navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","_useState3","_useState4","gallery","setSelectedGallery","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","brands","setBrands","_useState15","_useState16","category","setCateogy","_useState17","_useState18","error","setError","_useState19","_useState20","setImages","_useState21","_useState22","totalProduct","setTotalProduct","_useState23","_useState24","fProduct","setFProduct","_useState25","_useState26","selectedProd","setSelectedProd","_useState27","_useState28","prodVisible","setProdVisible","useEffect","fetch","process","method","redirect","then","response","json","result","data","catch","console","log","_useState29","EditorState","createEmpty","_useState30","_useState31","_useState32","setTabsData","prevTabsData","map","tab","id","_objectSpread","content","_jsx","children","CRow","item","key","_jsxs","CCol","lg","src","image","alt","concat","style","maxWidth","type","_useState33","label","CButton","_useState34","_Fragment","ToastContainer","className","CCard","CCardBody","CForm","onSubmit","e","preventDefault","_e$target","target","productName","productSku","productBrand","productCategory","shortDescription","form_check","url","status","hasError","product_name","value","sku","short_description","brand","parseInt","product_url","photo","_id","photo_gallery","i","relatedProducts","JSON","stringify","headers","body","toast","success","message","setTimeout","CFormInput","placeholder","name","CFormSelect","brand_name","CFormTextarea","rows","CIcon","icon","cilX","onClick","prevSelectedProd","_toConsumableArray","prevSelected","filter","onChange","regexPattern","RegExp","filteredProduct","match","noImage","width","fileInput","formdata","FormData","append","files","handleImageUpload","CFormText","component","index","htmlFor","cilPlus","multiple","event","length","filePromises","Array","from","file","formData","Promise","all","responses","validResponses","color"],"sourceRoot":""}