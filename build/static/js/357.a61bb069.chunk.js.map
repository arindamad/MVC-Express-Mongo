{"version":3,"file":"static/js/357.a61bb069.chunk.js","mappings":"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","sources":["views/brand/Brand.js","../node_modules/@coreui/icons/src/free/cil-pencil.ts","../node_modules/@coreui/icons/src/free/cil-trash.ts"],"sourcesContent":["import { cilPencil, cilTrash } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport { CButton, CCard, CCardBody, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify'\n\nconst BrandList = () => {\n  const [brand, setBrand] = useState([]);\n  const [updateList, setUpdateList] = useState({}) \n\n  useEffect(() => {\n\n    var requestOptions = {\n      method: 'POST',\n      redirect: 'follow'\n    };\n\n    let url =  process.env.REACT_APP_API_URL+\"brand/list\"\n    fetch(url, requestOptions)\n      .then(response => response.json())\n      .then(result => { console.log(result.data); setBrand(result.data) })\n      .catch(error => console.log('error', error));\n\n  }, [updateList]);\n\n  const handleDelete =(arg)=>{\n    let requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"_id\": arg\n      }),\n    };\n    const confirmWrp =  confirm(\"Are you sure you want to delete this?\");\n    if(!confirmWrp){\n      return;\n    }\n    fetch(process.env.REACT_APP_API_URL+\"brand/delete\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      if(result.status==200){\n        toast.success(result.message);\n        setUpdateList({\"_id\": arg});       \n      }else{\n        toast.error(result.message);\n      }\n    })\n    .catch(error => console.log('error', error)); \n  }\n\n  return (\n    <>\n    <ToastContainer />\n      <div className='d-flex justify-content-between  align-items-center  mb-4'>\n        <h1 className='headingType1'>Brand Listing</h1>\n        <Link to={'/brands/add'} className='btn btn-primary'>Add</Link>\n      </div>\n      <CCard>\n        <CCardBody>\n          <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell>\n                 Brand Id\n                </CTableHeaderCell>\n                <CTableHeaderCell>\n                  Brand Name\n                </CTableHeaderCell>\n                <CTableHeaderCell>\n                  Brand Category\n                </CTableHeaderCell> \n                <CTableHeaderCell>\n                  Status\n                </CTableHeaderCell>\n                <CTableHeaderCell>\n                  Action\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {brand.map((i, key) => (\n                <CTableRow key={key}>\n                  <CTableDataCell width={120}>\n                    {i._id}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {i.brand_name}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    {i.brand_category.brand_category_name} \n                  </CTableDataCell>                  \n                  <CTableDataCell>\n                    {i.status == 0 ? <CButton color='warning'>Inactive</CButton> : <CButton color='success'>Active</CButton>}\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    <ul className='actionBtnS'>\n                      <li>\n                        <CIcon onClick={()=>handleDelete(i._id)} icon={cilTrash} customClassName=\"nav-icon\" />\n                      </li>\n                      <li>\n                        <Link to={'/products/' + i._id}>\n                          <CIcon icon={cilPencil} customClassName=\"nav-icon\" />\n                        </Link>\n                      </li>\n                    </ul>\n\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n\n\n            </CTableBody>\n          </CTable>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default BrandList\n","export var cilPencil = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M29.663,482.25l.087.087a24.847,24.847,0,0,0,17.612,7.342,25.178,25.178,0,0,0,8.1-1.345l142.006-48.172,272.5-272.5A88.832,88.832,0,0,0,344.334,42.039l-272.5,272.5L23.666,456.541A24.844,24.844,0,0,0,29.663,482.25Zm337.3-417.584a56.832,56.832,0,0,1,80.371,80.373L411.5,180.873,331.127,100.5ZM99.744,331.884,308.5,123.127,388.873,203.5,180.116,412.256,58.482,453.518Z' class='ci-primary'/>\"];\n","export var cilTrash = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"];\n"],"names":["_useState","useState","_useState2","_slicedToArray","brand","setBrand","_useState3","_useState4","updateList","setUpdateList","useEffect","fetch","process","method","redirect","then","response","json","result","console","log","data","catch","error","_jsxs","_Fragment","children","_jsx","ToastContainer","className","Link","to","CCard","CCardBody","CTable","CTableHead","CTableRow","CTableHeaderCell","CTableBody","map","i","key","CTableDataCell","width","_id","brand_name","brand_category","brand_category_name","status","CButton","color","CIcon","onClick","arg","requestOptions","headers","body","JSON","stringify","confirm","toast","success","message","handleDelete","icon","cilTrash","customClassName","cilPencil"],"sourceRoot":""}