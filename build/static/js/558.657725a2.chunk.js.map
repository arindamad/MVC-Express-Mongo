{"version":3,"file":"static/js/558.657725a2.chunk.js","mappings":"uPA+EA,UAxEe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eACA,GADA,WACwBA,EAAAA,EAAAA,UAAS,KAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,SAClDC,QAAQC,IAAIN,EAAUO,KACtBC,MAAMC,0CAA2C,CAC7CC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAEA,EAAEC,UAAQF,MAAK,SAACG,GACvBV,QAAQC,IAAIS,EAAKA,KAAKC,QAAO,SAAAC,GAAC,OAAEA,EAAEC,SAASlB,EAAUO,QACrDT,EAAQiB,EAAKA,KAAKC,QAAO,SAAAC,GAAC,OAAEA,EAAEC,SAASlB,EAAUO,aAIpD,IAEH,IAAMY,EAAU,SAACC,GAGf,OAFiB,IAAIC,KAAKD,GACEE,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,KAYxG,OAAQ,iCACN,iBAAKC,UAAU,yDAAf,WACI,eAAIA,UAAU,OAAd,wBACA,SAAC,KAAD,CAAMA,UAAU,yBAAyBC,GAAI,aAA7C,2BAEJ,gBAAKD,UAAU,iBAAf,UACI,gBAAKA,UAAU,YAAf,UACI,UAAC,KAAD,CAAQE,SAAO,EAACC,UAAQ,EAAxB,WACI,SAAC,IAAD,WACI,UAAC,KAAD,YACA,SAAC,KAAD,CAAkBC,MAAO,IAAKC,MAAM,MAApC,sBACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,0BACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,mBACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,kBACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,qBACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,0BAGJ,UAAC,KAAD,WACKlC,EAAKmC,KAAI,SAACf,EAAGgB,GAAJ,OACN,UAAC,KAAD,YACI,SAAC,KAAD,CAAgBF,MAAM,MAAtB,SAA6Bd,EAAEV,OAC/B,UAAC,KAAD,kBAAsBU,EAAEiB,QAAW,gCAAQjB,EAAEiB,OAAOC,WAAjB,IAA8B,IAA9B,IAAoClB,EAAEiB,OAAOE,aAAjD,GAA/B,QACA,SAAC,KAAD,UAAiBjB,EAAQF,EAAEoB,YAAa,MAAOlB,EAAQF,EAAEqB,aACzD,SAAC,KAAD,WAjCVlB,EAiCkCH,EAAEoB,WAhCjC,IAAIhB,KAAKD,GAGKmB,mBAAmB,QADlC,CAAEC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,gBA+BhD,SAAC,KAAD,WAAgB,mBAAQjB,UAAWT,EAAE2B,OAAO,kBAAkB,kBAA9C,SAAkE3B,EAAE2B,OAAO,SAAS,eACpG,SAAC,KAAD,MANYX,GA7BvB,IAACb,KAsCiB,IAAdvB,EAAKgD,SAAY,SAAC,KAAD,WAAW,SAAC,KAAD,CAAgBnB,UAAU,cAAcoB,QAAS,EAAjD,6C","sources":["views/slots/slots.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { CButton, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\n\nimport './slots.scss';\nimport { Link } from 'react-router-dom';\n\n\nconst SlotList=()=> {\n  const [doctor, setDoctor] = useState([]);\n  const [slot, setSlot] = useState([]);\n\n  useEffect(() => {\n   \n    const clinic_id = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(clinic_id._id)\n    fetch(process.env.REACT_APP_API_URL+\"slot/list\", {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(e=>e.json()).then((data)=>{\n        console.log(data.data.filter(i=>i.clinic===clinic_id._id));\n        setSlot(data.data.filter(i=>i.clinic===clinic_id._id));\n    })\n\n\n  }, []);\n\n  const getTime = (arg) =>{\n    const dateInfo = new Date(arg);\n    const timeString = dateInfo.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n    return timeString;\n  }\n  const getDay = (arg) =>{\n    const dateInfo = new Date(arg);\n    // Get formatted date and day string\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const dateDayString = dateInfo.toLocaleDateString('en-US', options);\n    return dateDayString;\n  }\n\n\n  return (<>\n    <div className='d-flex justify-content-between align-items-center mb-3'>\n        <h2 className='mb-3'>Slot List</h2>\n        <Link className='btn btn-lg btn-primary' to={\"/slots/add\"}>Add Slots</Link>\n    </div>\n    <div className='arTableWrapper'>\n        <div className='SlotLists'>\n            <CTable striped bordered>\n                <CTableHead>\n                    <CTableRow>\n                    <CTableHeaderCell width={100} scope=\"col\">Slot Id</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Doctor Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Slot</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Day</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                    </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                    {slot.map((i, k)=>(\n                        <CTableRow key={k}>\n                            <CTableDataCell scope=\"row\">{i._id}</CTableDataCell>\n                            <CTableDataCell>Dr. {!i.doctor?\"\": <span> {i.doctor.first_name} {\" \"} {i.doctor.last_name}</span> } </CTableDataCell>\n                            <CTableDataCell>{getTime(i.start_time) +' - '+ getTime(i.end_time)}</CTableDataCell>\n                            <CTableDataCell>{getDay(i.start_time)}</CTableDataCell>\n                            <CTableDataCell><button className={i.status?\"btn btn-success\":\"btn btn-primary\"}>{i.status?\"Active\":\"Pending\"}</button></CTableDataCell>      \n                            <CTableDataCell></CTableDataCell>             \n                        </CTableRow>\n                    ))}  \n                    {slot.length===0&&<CTableRow><CTableDataCell className='text-center' colSpan={6}>No Slot Found.</CTableDataCell></CTableRow>}              \n                </CTableBody>\n            </CTable>\n        </div>\n    </div>\n    </>\n  )\n}\nexport default SlotList;"],"names":["useState","slot","setSlot","useEffect","clinic_id","JSON","parse","localStorage","getItem","console","log","_id","fetch","process","method","headers","then","e","json","data","filter","i","clinic","getTime","arg","Date","toLocaleTimeString","hour","minute","hour12","className","to","striped","bordered","width","scope","map","k","doctor","first_name","last_name","start_time","end_time","toLocaleDateString","weekday","year","month","day","status","length","colSpan"],"sourceRoot":""}