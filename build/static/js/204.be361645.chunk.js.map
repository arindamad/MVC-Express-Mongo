{"version":3,"file":"static/js/204.be361645.chunk.js","mappings":"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","sources":["views/category/Create.js"],"sourcesContent":["import { CButton, CCard, CCardBody, CCol, CForm, CFormInput, CFormLabel, CFormSelect, CFormTextarea, CInputGroup, CInputGroupText, CRow } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify'\n\nconst CategoryCreate = () => {\n  const [validated, setValidated] = useState(false);\n  const [category, setCategory] = useState([]);\n  const Navigate = useNavigate();\n\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    event.preventDefault()\n    if (form.checkValidity() === false) {    \n      event.stopPropagation();\n    }\n    setValidated(true);\n\n\n    const [name, parent, image] = event.target;\n\n\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"name\": name.value,\n        \"parent\": parent.value || null,\n        \"image\": image.value || null\n      }),\n    };\n\n    fetch(process.env.REACT_APP_API_URL + \"category/create\", requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        if (result.status == 200) {\n          toast.success(result.message);\n          setTimeout(() => {\n            Navigate(\"/category\")\n          }, 5000);\n        } else {\n          toast.error(result.message);\n        }\n      })\n      .catch(error => console.log('error', error));\n    \n  }\n\n  useEffect(() => {\n\n    var requestOptions = { \n      method: 'POST',\n      redirect: 'follow'\n    };\n\n    let url =  process.env.REACT_APP_API_URL+\"category/list\"\n    fetch(url, requestOptions)\n      .then(response => response.json())\n      .then(result => {console.log(result.data); setCategory(result.data) })\n      .catch(error => console.log('error', error));\n\n  }, []);\n\n  return (\n    <>\n      <ToastContainer />\n      <CCard >\n        <CCardBody>\n          <h1 className='text-center mb-4'>Add New Category</h1>\n          <CRow className='justify-content-center'>\n            <CCol lg={8}>\n              <CForm\n                className=\"row g-3 needs-validation\"\n                noValidate\n                validated={validated}\n                onSubmit={handleSubmit}\n              >\n                <CCol md={6}>\n                  <CFormInput\n                    type=\"text\"\n                    defaultValue=\"\"\n                    feedbackInvalid=\"Please enter a Brand Name.\"\n                    id=\"validationCustom01\"\n                    label=\"Category name\"\n                    name='name'\n                    required\n                  />\n                </CCol>\n                <CCol md={6}>\n                <CFormSelect\n                  type=\"text\"\n                  defaultValue=\"\"\n                  feedbackInvalid=\"Please Select Status.\"\n                  id=\"validationCustom02\"\n                  label=\"Parent\"\n                  name='parent'\n                >\n                  <option value={\"\"}>Select Category</option>\n                  {category.map((i, key) => (\n                    <option key={key} value={i._id}>\n                      {i.name}\n                    </option>\n                  ))}\n                </CFormSelect>\n\n                </CCol>\n                <CCol md={6}>\n                  <CFormInput\n                    type=\"file\"\n                    defaultValue=\"\"\n                    feedbackInvalid=\"Please Select Status.\"\n                    label=\"Image\"\n                    name='image'\n                  />\n\n                </CCol>\n                <CCol md={6}>\n                  {/* <CFormSelect\n                    type=\"text\"\n                    defaultValue=\"\"\n                    feedbackInvalid=\"Please Select Status.\"\n                    id=\"validationCustom02\"\n                    label=\"Status\"\n                    name='status'\n                    required\n                  >\n                    <option value={\"1\"}>Active</option>\n                    <option value={\"0\"}>Inactive</option>\n                  </CFormSelect> */}\n                </CCol>\n                <CCol xs={12} className='text-center'>\n                  <CButton color=\"primary\" type=\"submit\" className='py-2 px-5'>\n                    Submit form\n                  </CButton>\n                </CCol>\n\n              </CForm>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default CategoryCreate;\n"],"names":["_useState","useState","_useState2","_slicedToArray","validated","setValidated","_useState3","_useState4","category","setCategory","Navigate","useNavigate","useEffect","fetch","process","method","redirect","then","response","json","result","console","log","data","catch","error","_jsxs","_Fragment","children","_jsx","ToastContainer","CCard","CCardBody","className","CRow","CCol","lg","CForm","noValidate","onSubmit","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","_event$target","target","name","parent","image","requestOptions","headers","body","JSON","stringify","value","status","toast","success","message","setTimeout","md","CFormInput","type","defaultValue","feedbackInvalid","id","label","required","CFormSelect","map","i","key","_id","xs","CButton","color"],"sourceRoot":""}