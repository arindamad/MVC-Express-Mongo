{"version":3,"file":"static/js/533.760c819d.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/loader.js","components/Toster.js"],"sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst PatientList = React.lazy(() => import('./views/patient/patientList'))\nconst PatientUpdate = React.lazy(() => import('./views/patient/patientUpdate'))\n\nconst DoctorList = React.lazy(() => import('./views/doctors/doctors'))\nconst Appointments = React.lazy(() => import('./views/appointment/appointments'))\n\nconst Clinic = React.lazy(() => import('./views/clinic/addClinic'));\n\nconst ClinicList = React.lazy(() => import('./views/clinic/clinic'));\nconst SingleClinic = React.lazy(() => import('./views/clinic/clinic_details'));\n\n\n//clinic \n\nconst SlotList = React.lazy(() => import('./views/slots/slots'));\nconst AddSlots = React.lazy(() => import('./views/slots/addSlots'));\n\n\n\n\n\n\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/patients', name: 'Patient', element: PatientList},\n  { path: '/patients/:id', name: 'Patient', element: PatientUpdate},  \n  { path: '/doctors', name: 'Doctor List', element: DoctorList},\n  { path: '/doctors/:id', name: 'Doctor Details', element: DoctorList},\n  { path: '/appointment', name: 'Appointment List', element: Appointments},\n  { path: '/clinic', name: 'Clinic List', exact: true, element: ClinicList},\n  { path: '/clinic/:id', name: 'Single Clinic', element: SingleClinic},\n  { path: '/clinic/:id/edit', name: 'Clinic Edit', element: SingleClinic},\n  { path: '/clinic/add', name: 'Add Clinic', element: Clinic},\n  { path: '/slots', name: 'My Slots', exact: true, element: SlotList},\n  { path: '/slots/add', name: 'Add Slots', element: AddSlots},\n\n\n\n\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"#/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: \"#\"+breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          DocsHub\n        </a>\n        <span className=\"ms-1\">&copy; 2022 Emania Solutions.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Docshub\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n  cilAccountLogout,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar8 from './../../assets/images/avatars/8.jpg'\nimport { useNavigate } from 'react-router-dom'\n\nconst AppHeaderDropdown = () => {\n  const Navigate = useNavigate()\n  const handelLogout = ()=>{\n    window.localStorage.removeItem(\"token\");\n    window.location.reload()\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">        \n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem onClick={handelLogout}>\n          <CIcon icon={cilAccountLogout} className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <h4 className='text-light'>DocsHub</h4>\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n         \n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBullhorn,\n  cilDrop,\n  cilHospital,\n  cilMedicalCross,\n  cilNotes,\n  cilSpeedometer,\n  cilUser,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react';\nimport { TbTestPipe, TbNotes } from \"react-icons/tb\";\nimport { FiUsers } from \"react-icons/fi\";\nimport { AiOutlineCalendar } from \"react-icons/ai\";\nimport { MdOutlinePayments } from \"react-icons/md\";\n\nconst getRoles = JSON.parse(localStorage.getItem(\"user\"));\nlet _nav=[];\nif(getRoles?.role===\"ADMIN\"){\n  _nav = [\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/dashboard',\n      icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavTitle,\n      name: 'User',\n    },\n    {\n      component: CNavItem,\n      name: 'Patient List',\n      to: '/patients',\n      icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Doctor List',\n      to: '/doctors',\n      icon: <CIcon icon={cilMedicalCross} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Receptionist',\n      to: '/',\n      icon: <CIcon icon={cilBullhorn} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Clinic List',\n      to: '/clinic',\n      icon: <CIcon icon={cilHospital} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Lab Technicians',\n      to: '/',\n      icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Health Workers',\n      to: '/',\n      icon: <FiUsers className=\"arNavIcon\" />,\n    },\n    \n    {\n      component: CNavTitle,\n      name: 'Activities',\n    },\n    {\n      component: CNavGroup,\n      name: 'Appointment List',\n      to: '/',\n      icon: <AiOutlineCalendar className=\"arNavIcon\" />,\n      items: [\n        {\n          component: CNavItem,\n          name: 'All',\n          to: '/appointment',\n        },\n        {\n          component: CNavItem,\n          name: 'Active',\n          to: '/',\n        },\n        {\n          component: CNavItem,\n          name: 'Completed',\n          to: '/',\n        },\n        {\n          component: CNavItem,\n          name: 'Rejected',\n          to: '/',\n        }\n      ],\n    },\n    {\n      component: CNavGroup,\n      name: 'Diagonstics',\n      to: '/',\n      icon: <TbTestPipe  className=\"arNavIcon\"/>,\n      items: [\n        {\n          component: CNavItem,\n          name: 'Test Request',\n          to: '/',\n        },\n        {\n          component: CNavItem,\n          name: 'Test Approved',\n          to: '/',\n        },\n        {\n          component: CNavItem,\n          name: 'On Process',\n          to: '/',\n        },\n        {\n          component: CNavItem,\n          name: 'Completed',\n          to: '/',\n        },\n      ],\n    },\n    {\n      component: CNavItem,\n      name: 'Report',\n      icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n      to:\"/\"\n    },\n    {\n      component: CNavItem,\n      name: 'Prescription',\n      to: '/',\n      icon: <TbNotes className=\"arNavIcon\"/>,\n    },\n    {\n      component: CNavGroup,\n      name: 'Payment',\n      icon: <MdOutlinePayments className=\"arNavIcon\"/>,\n      items: [\n        {\n          component: CNavItem,\n          name: 'Transaction Pending',\n          to: '/',\n        },\n        {\n          component: CNavItem,\n          name: 'Successful Transaction',\n          to: '/',\n        },\n        {\n          component: CNavItem,\n          name: 'Faliure Transaction',\n          to: '/',\n        },\n      ],\n    },\n   \n    \n  ]\n}else if(getRoles?.role===\"CLINIC\"){\n  _nav = [\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/dashboard',\n      icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavTitle,\n      name: 'User',\n    },\n    {\n      component: CNavItem,\n      name: 'Slot List',\n      to: '/slots',\n      icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    }    \n  ]\n}else{\n  _nav=[]\n}\n\nconsole.log(getRoles?.role===\"ADMIN\")\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react';\n\nimport { AppSidebarNav } from './AppSidebarNav';\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set' })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <h4 className='text-light'>DocsHub</h4>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react';\nimport { CSpinner } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nconst Loader = ({ color, size, background, backgroundOpacity}) => {\n  return (<>\n    {background && <div className='loader_background' style={{opacity:backgroundOpacity}}></div> }\n    <div className=\"loaderWrapper\">\n      <CSpinner color={color} size={size} />\n    </div>\n    </>\n  );\n};\n\nLoader.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.string,\n    background: PropTypes.bool,\n    backgroundOpacity: PropTypes.number\n  };\n  \n  Loader.defaultProps = {\n    color: 'primary',\n    size: 'lg',\n    background: true,\n    backgroundOpacity:0.6\n  };\n\nexport default Loader;","import React, { useRef, useState } from 'react';\nimport {  CToast, CToastBody, CToastClose, CToaster } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nconst CustomToster = ({ color, size, background, backgroundOpacity}) => {\n  const toaster = useRef()\n  const [toast, addToast] = useState(0);\n  \n  const errorMsg = (\n    <CToast autohide={true} color=\"danger\" className=\"text-white align-items-center\">\n      <div className=\"d-flex\">\n        <CToastBody>Error.</CToastBody>\n        <CToastClose className=\"me-2 m-auto\" white />\n      </div>\n    </CToast>\n  );\n  addToast(errorMsg);\n  return (<>\n    <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n\n    </>\n  );\n};\n\nCustomToster.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.string,\n    background: PropTypes.bool,\n    backgroundOpacity: PropTypes.number\n  };\n  \n  CustomToster.defaultProps = {\n    color: 'primary',\n    size: 'lg',\n    background: true,\n    backgroundOpacity:0.6\n  };\n\nexport default CustomToster;"],"names":["Dashboard","React","PatientList","PatientUpdate","DoctorList","Appointments","Clinic","ClinicList","SingleClinic","path","exact","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","AppContent","lg","Suspense","fallback","color","idx","to","replace","AppFooter","target","rel","useNavigate","variant","placement","caret","src","avatar8","size","icon","cilSettings","cilUser","onClick","window","localStorage","removeItem","reload","cilAccountLogout","dispatch","useDispatch","sidebarShow","useSelector","state","position","fluid","type","cilMenu","cilBell","cilList","cilEnvelopeOpen","AppSidebarNav","items","navLink","badge","text","navItem","item","component","rest","Component","NavLink","navGroup","String","toggler","visible","startsWith","getRoles","JSON","parse","getItem","_nav","role","CNavItem","cilSpeedometer","customClassName","CNavTitle","cilMedicalCross","cilBullhorn","cilHospital","cilDrop","CNavGroup","cilNotes","console","log","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","navigation","Loader","background","backgroundOpacity","style","opacity","defaultProps","CustomToster","toaster","useRef","useState","toast","addToast","autohide","white","ref"],"sourceRoot":""}