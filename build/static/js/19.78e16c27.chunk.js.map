{"version":3,"file":"static/js/19.78e16c27.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","redux/actions/tokenActions.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormCheck,\n  CFormInput,\n  CInputGroup,\n  CRow,\n} from '@coreui/react';\nimport './Login.scss';\nimport { BsBoxArrowInRight } from \"react-icons/bs\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setToken, clearToken } from '../../../redux/actions/tokenActions';\n\nconst Login = () => {\n  const token = useSelector((state) => state.token);\n  const dispatch = useDispatch();\n  const Navigate = useNavigate();\n\n  const url = process.env.REACT_APP_API_URL+\"admin/login\";\n  const [userInfo, setUserInfo] = useState({});\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const [username, password, keepMeLogin] = e.target;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: username.value,\n        password: password.value,\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((result) => {\n        setUserInfo(result.data);\n        localStorage.setItem(\"token\", result.data.token);\n        dispatch(setToken(result.data.token));    \n        window.location.reload();\n      })\n      .catch((error) => {\n        console.error('Error during login:', error);\n      });\n  };\n\n  return (\n    <div className=\"arLoginBg min-vh-100 d-flex flex-row align-items-center login-sec\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8} sm={6}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={handleLogin}>\n                    <h1>Trans<span>Con</span></h1>\n                    <div className='each_form_group'>\n                      <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Username</label>\n                      <CInputGroup>\n                        <CFormInput autoComplete=\"username\" name='username'/>\n                      </CInputGroup>\n                    </div>\n                    <div className='each_form_group'>\n                      <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Password</label>\n                      <CInputGroup>\n                        <CFormInput type=\"password\" autoComplete=\"current-password\" name='password'/>\n                      </CInputGroup>\n                    </div>\n                    <CRow className='justify-content-between'>\n                      <CCol xs={\"auto\"} className='icons'>\n                        <div className='d-flex align-items-center'>\n                          <CFormCheck id='keepMeLogin' name='keepMeLogin'></CFormCheck>\n                          <label htmlFor='keepMeLogin' className='para_1'>Keep me  logged  in</label> \n                        </div>\n                      </CCol>\n                      <CCol xs={\"auto\"}>\n                        <Link className='para_2' to={'/forget-password'}>Forgot Password?</Link>\n                      </CCol>                      \n                    </CRow>\n                    <div className='mt-5 text-center'>\n                        <CButton color=\"primary\" type='submit'>Login<BsBoxArrowInRight color='primary'/></CButton>\n                    </div>\n                  </CForm>                  \n                </CCardBody>\n              </CCard>              \n              <CCard className=\"rightLoginBg text-white\">\n                 <img src={require(\"../../../assets/images/login-img.png\")} height=\"100%\" alt='login image'/>\n               </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","// src/redux/actions/tokenActions.js\nimport { SET_TOKEN, CLEAR_TOKEN } from './tokenActionTypes';\n\nexport const setToken = (token) => ({\n  type: SET_TOKEN,\n  payload: token,\n});\n\nexport const clearToken = () => ({\n  type: CLEAR_TOKEN,\n});\n"],"names":["useSelector","state","token","dispatch","useDispatch","_useState","useNavigate","useState","_useState2","_slicedToArray","setUserInfo","_jsx","className","children","CContainer","CRow","CCol","md","sm","_jsxs","CCardGroup","CCard","CCardBody","CForm","onSubmit","e","preventDefault","_e$target","target","username","password","fetch","process","method","headers","body","JSON","stringify","user","value","then","response","ok","Error","json","result","data","localStorage","setItem","type","SET_TOKEN","payload","setToken","window","location","reload","catch","error","console","htmlFor","CInputGroup","CFormInput","autoComplete","name","xs","CFormCheck","id","Link","to","CButton","color","BsBoxArrowInRight","src","require","height","alt"],"sourceRoot":""}