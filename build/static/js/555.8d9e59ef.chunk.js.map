{"version":3,"file":"static/js/555.8d9e59ef.chunk.js","mappings":"wRAyLA,UA5Jc,WACZ,IAAMA,GAAUC,EAAAA,EAAAA,MAChB,GAAoCC,EAAAA,EAAAA,UAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAUC,EAAAA,EAAAA,UACbC,aAAaC,QAAQ,UACtBZ,EAAQ,cAIP,KAEI,KACA,KAwEP,OAAQ,iCACN,SAAC,KAAD,CAAUa,IAAKJ,EAASK,KAAMX,EAAYY,UAAU,aAGpD,gBAAKC,UAAU,yDAAf,UACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAMA,UAAU,yBAAhB,UACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,MAAjB,UACE,UAAC,KAAD,YACE,UAAC,KAAD,CAAOE,SApEF,SAACC,GACpBA,EAAEC,iBACF,IAAMb,EAAQ,GACVc,GAAW,EACf,UAA6BF,EAAEG,OAA/B,GAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAO,CAAEC,KAAMH,EAASI,MAAOH,SAAUA,EAASG,OAEpDF,EAAKC,OACPnB,EAAMmB,KAAO,gCACbL,GAAU,GAERI,EAAKD,WACPjB,EAAMiB,SAAW,yBACjBH,GAAU,GAEZb,EAASD,GAILc,IACFf,GAAW,GACbsB,MAAMC,4CAA6C,CACjDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUT,KAEpBU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAV,GACAA,EAAKlB,OAQPD,GAAW,GACXgC,MAAMb,EAAKc,WARX5B,aAAa6B,QAAQ,QAAS,oCAC9BC,QAAQC,IAAIjB,GAEZd,aAAa6B,QAAQ,OAAQP,KAAKC,UAAUT,EAAKA,OACjDzB,EAAQ,cACR2C,OAAOC,SAASC,aAOnBC,OAAM,SAAAvC,GACLkC,QAAQlC,MAAMA,GACdH,EAAc,GACdE,GAAW,GACXgC,MAAM,2DAoBI,WACE,mCACA,cAAGtB,UAAU,uBAAb,sCACA,UAAC,KAAD,CAAaA,UAAU,OAAvB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAO+B,KAAMC,EAAAA,OAEf,SAAC,KAAD,CAAYC,YAAY,WAAWC,aAAa,cAElD,gBAAKlC,UAAU,gBAAf,SAAgCT,EAAMmB,QACtC,UAAC,KAAD,CAAaV,UAAU,OAAvB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAO+B,KAAMI,EAAAA,OAEf,SAAC,KAAD,CACEC,KAAK,WACLH,YAAY,WACZC,aAAa,cAGjB,gBAAKlC,UAAU,gBAAf,SAAgCT,EAAMiB,YAEtC,UAAC,KAAD,YACE,SAAC,KAAD,CAAM6B,GAAI,EAAV,UACE,SAAC,KAAD,CAASC,MAAM,UAAUtC,UAAU,OAAOoC,KAAK,SAA/C,sBAIF,SAAC,KAAD,CAAMC,GAAI,EAAGrC,UAAU,aAAvB,UACE,SAAC,KAAD,CAASsC,MAAM,OAAOtC,UAAU,OAAhC,sCAOLX,IAAW,SAAC,KAAD,CAAQkD,YAAY,UAIpC,SAAC,KAAD,CAAOvC,UAAU,6BAA6BwC,MAAO,CAAEC,MAAO,OAA9D,UACE,SAAC,KAAD,CAAWzC,UAAU,cAArB,UACE,4BACE,sCACA,+K,sDC1Kb,IAAMmC,EAAgB,CAAC,UAAU","sources":["views/pages/login/Login.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Link, Navigate, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormText,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CToastBody,\n  CToastClose,\n  CToaster,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons';\n\nimport {  CToast } from '@coreui/react'\nimport { Loader } from 'src/components';\n\n\n\n\n\nconst Login = () => {\n  const Redrict = useNavigate();\n  const [errorToast, addErrorToast] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({});\n  const toaster = useRef()\n  if(localStorage.getItem(\"token\")){\n    Redrict(\"/dashboard\")\n  }\n\n  const errorMsg = (\n    <CToast autohide={true} color=\"danger\" className=\"text-white align-items-center\">\n      <div className=\"d-flex\">\n        <CToastBody>Error.</CToastBody>\n        <CToastClose className=\"me-2 m-auto\" white />\n      </div>\n    </CToast>\n  );\n  \n  // const successMsg = (\n  //   <CToast autohide={true} color=\"success\" className=\"text-white align-items-center\">\n  //     <div className=\"d-flex\">\n  //       <CToastBody>Successfully Loggedin.</CToastBody>\n  //       <CToastClose className=\"me-2 m-auto\" white />\n  //     </div>\n  //   </CToast>\n  // );\n  \n  \n  const handelSubmit = (e)=>{\n    e.preventDefault();\n    const error = {};\n    let hasError = false;\n    const [username, password] = e.target;\n   \n    const data = { user: username.value, password: password.value };\n    \n    if(!data.user){\n      error.user = \"Please enter a email address.\";\n      hasError =true;\n    }\n    if(!data.password){\n      error.password = \"Please enter password.\";\n      hasError =true;\n    }\n    setError(error);\n\n    \n\n    if(!hasError){\n      setLoading(true);\n    fetch(process.env.REACT_APP_API_URL+'admin/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(data => {   \n        if(!data.error){\n          localStorage.setItem(\"token\", \"dXNlckBleGFtcGxlLmNvbTpzZWNyZXQ=\");\n          console.log(data)\n          \n          localStorage.setItem(\"user\", JSON.stringify(data.data) );\n          Redrict(\"/dashboard\")\n          window.location.reload();\n        } else{\n          setLoading(false);\n          alert(data.message)\n        }  \n        \n      })\n      .catch(error => {\n        console.error(error);\n        addErrorToast(1);\n        setLoading(false);\n        alert(\"User name or password is invalid please try again.\")\n\n      });\n    }\n\n\n\n  }\n  \n  return (<>\n    <CToaster ref={toaster} push={errorToast} placement=\"top-end\" />\n\n   \n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={handelSubmit}> \n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput placeholder=\"Username\" autoComplete=\"false\" />                      \n                    </CInputGroup>\n                    <div className='loginErrorMsg'>{error.user}</div>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"false\"\n                      />\n                    </CInputGroup>\n                    <div className='loginErrorMsg'>{error.password}</div>\n\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" className=\"px-4\" type='submit'>\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n\n                  {loading && <Loader background={true}></Loader>}\n                  \n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>DoctsHub</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n    </>)\n}\n\nexport default Login\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]"],"names":["Redrict","useNavigate","useState","errorToast","addErrorToast","loading","setLoading","error","setError","toaster","useRef","localStorage","getItem","ref","push","placement","className","md","onSubmit","e","preventDefault","hasError","target","username","password","data","user","value","fetch","process","method","headers","body","JSON","stringify","then","response","json","alert","message","setItem","console","log","window","location","reload","catch","icon","cilUser","placeholder","autoComplete","cilLockLocked","type","xs","color","background","style","width"],"sourceRoot":""}