{"version":3,"file":"static/js/283.2b0dcb9f.chunk.js","mappings":"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","sources":["views/CMS/pages.js","../node_modules/@coreui/icons/src/free/cil-pencil.ts","../node_modules/@coreui/icons/src/free/cil-trash.ts"],"sourcesContent":["import { cilPencil, cilTrash } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport { CButton, CCard, CCardBody, CCol, CForm, CFormInput, CFormLabel, CFormSelect, CFormTextarea, CInputGroup, CInputGroupText, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify'\n\nconst Pages = () => {\n  const [brand, setBrand] = useState([]);\n  const [error, setError] = useState({}); \n  const Navigate =  useNavigate();\n  const [validated, setValidated] = useState(false);\n  const [updateList, setUpdateList] = useState({}) \n\n  // const handleSubmit = (e) => {\n  //   alert(\"test\");\n  //   e.preventDefault();\n  //   const form = e.currentTarget\n\n  //   if (form.checkValidity() === false) {     \n  //     e.stopPropagation()\n  //     return;\n  //   }else{\n  //     setValidated(true)\n  //   }\n   \n\n  //   const [name, description, meta_title, meta_description,  status] = e.target;\n\n\n  // var requestOptions = {\n  //   method: 'POST',\n  //   headers: {\n  //     \"Content-Type\": \"application/json\"\n  //   },\n  //   body: JSON.stringify({\n  //     \"page_name\": name.value,      \n  //     \"page_description\": description.value,\n  //     \"meta_title\":meta_title.value,\n  //     \"meta_description\":meta_description.value,\n  //     \"status\": status.value\n  //   }),\n  // };\n\n  // fetch(process.env.REACT_APP_API_URL+\"pages/create\", requestOptions)\n  // .then(response => response.json())\n  // .then(result => {\n  //   if(result.status==200){\n  //     toast.success(result.message);\n  //     setUpdateList(result.data);\n  //     setValidated(false)\n  //     e.target.reset();\n  //   }else{\n  //     toast.error(result.message);\n  //   }\n  // })\n  // .catch(error => console.log('error', error));    \n  // }\n\n  const handleDelete =(arg)=>{\n    let requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"_id\": arg\n      }),\n    };\n    const confirmWrp =  confirm(\"Are you sure you want to delete this?\");\n    if(!confirmWrp){\n      return;\n    }\n\n    fetch(process.env.REACT_APP_API_URL+\"pages/delete\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      if(result.status==200){\n        toast.success(result.message);\n        setUpdateList({\"_id\": arg});\n        setValidated(false)\n        e.target.reset();\n      }else{\n        toast.error(result.message);\n      }\n    })\n    .catch(error => console.log('error', error)); \n  }\n\n\n  useEffect(() => {\n    var requestOptions = {\n      method: 'POST',\n      redirect: 'follow'\n    };\n\n    let url =  process.env.REACT_APP_API_URL+\"pages/list\"\n    fetch(url, requestOptions)\n    .then(response => response.json())\n    .then(result => { console.log(result.data); setBrand(result.data) })\n    .catch(error => console.log('error', error));\n\n  }, [updateList]);\n\n  return (\n    <>\n      <ToastContainer />\n      <CRow className='justify-content-center'>                \n          <CCol lg>\n            <h1 className='headingType1 mb-4'>Pages</h1>\n          </CCol>\n          <CCol lg=\"auto\">\n            <Link to={'/pages/add'} className='btn btn-primary'>Add</Link>\n          </CCol>        \n      </CRow>\n      \n      <CCard >            \n          <CCardBody>              \n              <CRow className='justify-content-center'>                \n                <CCol lg={12}>\n                <CTable bordered striped>\n                  <CTableHead>\n                    <CTableRow>                      \n                      <CTableHeaderCell width={150}>\n                        Page Name\n                      </CTableHeaderCell>\n                      <CTableHeaderCell>\n                        Slug \n                      </CTableHeaderCell> \n                      <CTableHeaderCell>\n                        Created At\n                      </CTableHeaderCell>\n                      <CTableHeaderCell>\n                        Status\n                      </CTableHeaderCell>\n                      <CTableHeaderCell width={100}>\n                        Action\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                <CTableBody>\n                  {brand.map((i, key) => (\n                  <CTableRow key={key}>\n                    <CTableDataCell>\n                      {i.page_name}\n                    </CTableDataCell>\n                    <CTableDataCell width={230}>\n                      {i.page_slug}\n                    </CTableDataCell>   \n                    <CTableDataCell>\n                      {i.created_at}\n                    </CTableDataCell>               \n                    <CTableDataCell  width={120}>\n                      {i.status == 0 ? <CButton color='warning'>Inactive</CButton> : <CButton color='success'>Active</CButton>}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      <ul className='actionBtnS'>\n                        <li>\n                          <CIcon onClick={()=>handleDelete(i._id)} icon={cilTrash} customClassName=\"nav-icon\" />\n                        </li>\n                        <li>\n                          <Link to={'/products/' + i._id}>\n                            <CIcon icon={cilPencil} customClassName=\"nav-icon\" />\n                          </Link>\n                        </li>\n                      </ul>\n                    </CTableDataCell>\n                  </CTableRow>\n                ))}\n                </CTableBody>\n                </CTable>\n\n                </CCol>\n              </CRow>\n              \n          </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default Pages\n","export var cilPencil = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M29.663,482.25l.087.087a24.847,24.847,0,0,0,17.612,7.342,25.178,25.178,0,0,0,8.1-1.345l142.006-48.172,272.5-272.5A88.832,88.832,0,0,0,344.334,42.039l-272.5,272.5L23.666,456.541A24.844,24.844,0,0,0,29.663,482.25Zm337.3-417.584a56.832,56.832,0,0,1,80.371,80.373L411.5,180.873,331.127,100.5ZM99.744,331.884,308.5,123.127,388.873,203.5,180.116,412.256,58.482,453.518Z' class='ci-primary'/>\"];\n","export var cilTrash = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"];\n"],"names":["_useState","useState","_useState2","_slicedToArray","brand","setBrand","_useState3","_useState4","_useState5","useNavigate","_useState6","setValidated","_useState7","_useState8","updateList","setUpdateList","useEffect","fetch","process","method","redirect","then","response","json","result","console","log","data","catch","error","_jsxs","_Fragment","children","_jsx","ToastContainer","CRow","className","CCol","lg","Link","to","CCard","CCardBody","CTable","bordered","striped","CTableHead","CTableRow","CTableHeaderCell","width","CTableBody","map","i","key","CTableDataCell","page_name","page_slug","created_at","status","CButton","color","CIcon","onClick","arg","requestOptions","headers","body","JSON","stringify","confirm","toast","success","message","e","target","reset","handleDelete","_id","icon","cilTrash","customClassName","cilPencil"],"sourceRoot":""}