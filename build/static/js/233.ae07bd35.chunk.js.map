{"version":3,"file":"static/js/233.ae07bd35.chunk.js","mappings":"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","sources":["views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js","views/dashboard/Dashboard.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Users\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n      <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\n\nconst Dashboard = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      <WidgetsBrand withCharts />\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"names":["_ref","withCharts","chartOptions","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","maintainAspectRatio","plugins","legend","display","scales","x","y","_jsxs","CRow","children","_jsx","CCol","sm","lg","CWidgetStatsD","_objectSpread","className","chart","CChart","type","data","labels","datasets","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","icon","CIcon","cibFacebook","height","values","title","value","style","cibTwitter","cibLinkedin","color","cilCalendar","CWidgetStatsA","_Fragment","cilArrowBottom","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","CChartLine","label","pointBackgroundColor","getStyle","grid","drawBorder","ticks","min","max","cilArrowTop","random","Math","floor","progressGroupExample2","cilUser","cilUserFemale","progressGroupExample3","cibGoogle","percent","tableExample","avatar","src","avatar1","status","user","name","new","registered","country","flag","cifUs","usage","period","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","WidgetsDropdown","CCard","CCardBody","id","CButton","cilCloudDownload","CButtonGroup","map","active","marginTop","hexToRgba","borderDash","drawOnChartArea","beginAtZero","maxTicksLimit","stepSize","ceil","CCardFooter","xs","cols","md","item","index","CProgress","thin","WidgetsBrand","CCardHeader","xl","value1","value2","size","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","CTableDataCell","CAvatar"],"sourceRoot":""}