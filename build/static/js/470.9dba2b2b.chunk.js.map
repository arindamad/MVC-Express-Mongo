{"version":3,"file":"static/js/470.9dba2b2b.chunk.js","mappings":"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","sources":["views/slots/addSlots.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { CButton, CCol, CFormInput, CRow, CForm, CFormSelect } from '@coreui/react'\n\nimport './slots.scss'\nimport { useNavigate } from 'react-router-dom';\nimport Validation from '../forms/validation/Validation';\n\nconst AddSlots = () => {\n  const Navigate = useNavigate()\n  const [doctor, setDoctor] = useState([]);\n  const [filterDoctor, setfilterDoctor] = useState([]);\n\n  const [error, setError] = useState([]);\n  const [startTime, setStartTime] = useState([]);\n  const [endTime, setEndTime]=useState('');\n  const [getslectedDoctor, setSlectedDoctor]=useState({});\n  const [autoComplete, setAutoComplete] = useState(true)\n\n  const handelSubmit = (e)=>{\n    const error = {};\n    let hasError = false;\n    e.preventDefault();\n    const [ date, start_time, end_time, status, capacity] = e.target;\n    \n    const clinic = JSON.parse(localStorage.getItem(\"user\"));\n\n    if(!date.value){\n      error.date=\"Please enter a date.\";\n      hasError = true;\n    } \n    if(!start_time.value){\n      error.date=\"Please enter start date.\";\n      hasError = true;\n    }\n    if(!status.value){\n      error.date=\"Please enter Status.\";\n      hasError = true;\n    }\n    if(!capacity.value){\n      error.date=\"Please enter Status.\";\n      hasError = true;\n    }\n\n    if(hasError) {\n      alert(\"Please enter all value.\")\n    }\n\n    if(!hasError){\n    const data = {\n      \"doctor\": getslectedDoctor._id,\n      \"clinic\": clinic._id,\n      \"start_time\":date.value+\"T\"+startTime[start_time.value-1].label,\n      \"capacity\":capacity.value,\n      \"status\":status.value\n    };\n    const url = process.env.REACT_APP_API_URL+\"slot/create\"; \n    \n    console.log(data);\n    debugger;\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      if(data.status!=200){\n          alert(\"Something happen wrong.\")\n      }\n      console.log('Success:', data);\n     \n      if(!data.error){\n        Navigate(\"/slots\");\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  }\n  const handelStartTime = (e)=>{\n    console.log(e.target.value);\n    setEndTime(startTime[e.target.value].label);\n  }\n  const searchDoctor = (e)=>{\n    // e.target;\n    let regex = new RegExp('\\\\b' + e.target.value, 'i');\n    let SearchData = doctor.filter(user => (user.first_name+\" \"+user.last_name).match(regex));\n    setAutoComplete(true);\n    setfilterDoctor(SearchData)  \n  }\n  const selectedDoctor = (e)=>{\n    // setfilterDoctor([]);\n    setSlectedDoctor(e);\n    setAutoComplete(false);\n  }\n\n  useEffect(() => {\n    let arr=[];\n    for(let i = 0; i<48;i++){\n      let hoursMin= parseInt((i*30)/60, 10).toString().padStart(2, '0') +':'+(i*30%60).toString().padEnd(2, '0');\n      arr.push({label:hoursMin, value: i+1});\n    }\n    setStartTime(arr);\n    console.log(arr);\n\n    fetch(process.env.REACT_APP_API_URL+\"doctor/list\", {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(e=>e.json()).then((data)=>{\n        setDoctor(data.data);\n    })\n\n\n\n\n  }, [])\n\n  return (\n    <div className=\"addFormGlobal\">\n      <h2>Add Slots</h2>\n      <CForm onSubmit={handelSubmit}> \n        <CRow>\n          <CCol lg=\"6\">\n            {!autoComplete&&\n              <div className=''>\n                <h4>{getslectedDoctor.first_name+ \" \"+ getslectedDoctor.last_name}</h4>\n                <p>Uid : {getslectedDoctor.uid}</p>\n              </div>\n            }\n            {autoComplete&&<>\n              <label>Search Doctor</label>\n              <div className='search_doctor_wrp' >\n                <CFormInput placeholder=\"\" onKeyUp={searchDoctor} defaultValue=\"\"/>\n                <ul> \n                  {filterDoctor.map((i,key)=>(\n                    <li onClick={k=>selectedDoctor(i)} key={key}>{i.first_name} {\" \"} {i.last_name}</li>\n                  ))}\n                </ul>              \n              </div>            \n            </>}\n            \n            <div className='errorMsg'>{error.clinicName}</div>\n          </CCol>\n          <CCol lg=\"2\">\n          <label>Slot Date</label>           \n            <CFormInput type='date'  name='date'/>\n            <div className='errorMsg'>{error.registrationNo}</div>\n          </CCol>\n          <CCol lg=\"2\">\n            <label>Start Time</label>           \n            <CFormSelect \n              name='start_time'\n              options={[\n                'Select start time',\n                ...startTime\n              ]}\n              onChange={handelStartTime}\n            />\n            <div className='errorMsg'>{error.registrationNo}</div>\n          </CCol>\n          <CCol lg=\"2\">\n            <label>End Time</label>\n            <CFormInput placeholder=\"\" name='end_time' readOnly defaultValue={endTime}/>\n            <div className='errorMsg'>{error.clinicPhoneNo}</div>\n          </CCol>\n          \n         \n          \n          <CCol lg=\"6\">\n            <label>Status</label>\n            <CFormSelect  name='status'\n              options={[\n                'Status ----',\n                {label:\"Active\", value:'1'},\n                {label:\"Inactve\", value:'0'}\n              ]}\n              \n            />\n            <div className='errorMsg'>{error.last_name}</div>\n          </CCol>\n          <CCol lg=\"3\">\n            <label>Capacity</label>\n            <CFormInput placeholder=\"\" name='capacity' type='number' />\n            <div className='errorMsg'>{error.capacity}</div>\n          </CCol>\n          \n          <CCol lg=\"12\" className=\"text-center\">\n            <CButton type='submit' size=\"lg\">Add Slots</CButton>\n          </CCol>\n        </CRow>\n      </CForm>\n    </div>\n  )\n}\nexport default AddSlots\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Navigate","useNavigate","useState","doctor","setDoctor","filterDoctor","setfilterDoctor","error","startTime","setStartTime","endTime","setEndTime","getslectedDoctor","setSlectedDoctor","autoComplete","setAutoComplete","useEffect","arr","i","hoursMin","parseInt","toString","padStart","padEnd","push","label","value","console","log","fetch","process","method","headers","then","e","json","data","className","onSubmit","hasError","preventDefault","target","date","start_time","status","capacity","clinic","JSON","parse","localStorage","getItem","alert","_id","body","stringify","response","catch","lg","first_name","last_name","uid","placeholder","onKeyUp","regex","RegExp","SearchData","filter","user","match","defaultValue","map","key","onClick","k","clinicName","type","name","registrationNo","options","onChange","readOnly","clinicPhoneNo","size","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}