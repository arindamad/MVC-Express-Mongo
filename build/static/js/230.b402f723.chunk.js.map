{"version":3,"file":"static/js/230.b402f723.chunk.js","mappings":"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","sources":["views/CMS/addPages.js"],"sourcesContent":["import { cilPlus, cilX} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport {\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n  CInputGroup,\n  CRow\n} from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify'\nimport  './cms.scss';\n\nimport { BiBookContent, BiCarousel } from \"react-icons/bi\";\n\n\n\n\nconst AddPages = () => {\n  const [brand, setBrand] = useState([])\n  const [error, setError] = useState({})\n  const Navigate = useNavigate()\n  const [validated, setValidated] = useState(false)\n  const [updateList, setUpdateList] = useState({});\n  const [activeSect, setActiveSect] = useState(0);\n  const [selectedSect, setSelectedSect]  = useState(\"\");\n  \n  const [values, setValues]  = useState([]);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const [name, description, meta_title, meta_description, status] = e.target\n\n    if (form.checkValidity() === false) {\n      setValidated(true)\n      e.stopPropagation()\n    } else {\n      setValidated(false)\n\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          page_name: name.value,\n          page_description: description.value || '',\n          meta_title: meta_title.value || '',\n          meta_description: meta_description.value || '',\n          status: status.value || 0,\n        }),\n      }\n\n      const url = process.env.REACT_APP_API_URL + 'pages/create'\n\n      fetch(url, requestOptions)\n        .then((response) => response.json())\n        .then((result) => {\n          if (result.status == 200) {\n            toast.success(result.message)\n            setUpdateList(result.data)\n            setValidated(false)\n\n            e.target.reset()\n          } else {\n            toast.error(result.message)\n          }\n        })\n        .catch((error) => console.log('error', error))\n    }\n  }\n\n  const handleSection = (e)=>{\n    setSelectedSect(e);\n    setActiveSect(2)\n  } \n\n  const handleAdd = ()=> setActiveSect(1)\n\n  return (\n    <>\n      <ToastContainer />\n      <h1 className=\"headingType1 text-center mb-4\">Pages</h1>\n      <CForm\n        className=\"g-3 needs-validation\"\n        noValidate\n        validated={validated}\n        onSubmit={handleSubmit}\n      >\n        <CRow className=\"g-5 justify-content-center\">\n          <CCol lg={8}>\n            <CCard>\n              <CCardBody className=\"p-5\">\n                <div className=\"mb-4\">\n                  <CFormInput\n                    type=\"text\"\n                    defaultValue=\"\"\n                    feedbackInvalid=\"Please enter a Brand Name.\"\n                    id=\"validationCustom1\"\n                    label=\"Page Name\"\n                    name=\"name\"\n                    required\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <CFormTextarea\n                    defaultValue=\"\"\n                    feedbackInvalid=\"Please Select Status.\"\n                    label=\"Description\"\n                    id=\"validationCustom2\"\n                    name=\"description\"\n                    rows={6}\n                  />\n                </div>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol lg={4}>\n            <CCard>\n              <CCardBody className=\"p-5\">\n                <div className=\"mb-4\">\n                  <CFormInput\n                    type=\"text\"\n                    defaultValue=\"\"\n                    feedbackInvalid=\"Please enter a Brand Name.\"\n                    id=\"validationCustom3\"\n                    label=\"Meta Title\"\n                    name=\"meta_title\"\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <CFormTextarea\n                    defaultValue=\"\"\n                    feedbackInvalid=\"Please Select Status.\"\n                    label=\"Meta Description\"\n                    id=\"validationCustom3\"\n                    name=\"meta_description\"\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <CFormSelect\n                    type=\"text\"\n                    defaultValue=\"\"\n                    feedbackInvalid=\"Please Select Status.\"\n                    id=\"validationCustom4\"\n                    label=\"Status\"\n                    name=\"status\"\n                    required\n                  >\n                    <option value={'1'}>Active</option>\n                    <option value={'0'}>Inactive</option>\n                  </CFormSelect>\n                </div>\n                <div className=\"text-center mt-4\">\n                  <CButton color=\"primary\" type=\"submit\" className=\"py-2 px-5\">\n                    Add Page\n                  </CButton>\n                </div>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CForm>\n\n      <CCard  className='mt-4'>\n        <CCardBody className=\"p-5\">\n          <h4 className='mb-4'>Add Sections</h4>\n        {activeSect==2&& \n          <div className='alreadyAddedSections'>\n              <CInputGroup>\n                <CFormLabel>Section Title</CFormLabel>\n                <CFormInput type={'text'} />\n\n              </CInputGroup>\n              <CInputGroup>\n                \n              </CInputGroup>\n\n            \n          {/* <CAccordion>\n            <CAccordionItem itemKey={1}>\n              <CAccordionHeader>Slider 1</CAccordionHeader>\n              <CAccordionBody>\n                <CRow>\n                  <CCol lg={5}>\n                    Test wrapper \n                  </CCol>\n                </CRow>\n              </CAccordionBody>\n            </CAccordionItem>\n          </CAccordion> */}\n\n          </div>\n          }\n          {activeSect==1 &&\n          <div className='allSectionTypeWrp'>\n            <div className='removeBtn'>\n            <CIcon icon={cilX} customClassName=\"nav-icon\" />\n            </div>\n            <CRow className='g-3'>\n              <CCol lg=\"2\">\n                <div  className='each_section_Wrp' onClick={()=>handleSection(\"slider\")}>\n                  <div className='aicon'>\n                    <BiCarousel/>               \n                  </div>\n                  <div className='section_title'>\n                    Slider \n                  </div>\n                </div>\n              </CCol>\n              <CCol lg=\"2\">\n                <div className='each_section_Wrp'>\n                  <div className='aicon'>\n                    <BiBookContent/>               \n                  </div>\n                  <div className='section_title'>\n                    Content\n                  </div>\n                </div>\n              </CCol>\n            </CRow>\n          </div>}\n          {activeSect!=1&&\n          <div className='addNewSection' onClick={handleAdd}>\n            <CIcon icon={cilPlus} customClassName=\"nav-icon\" />\n          </div>}\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default AddPages\n"],"names":["_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","useNavigate","_useState6","validated","setValidated","_useState7","_useState8","setUpdateList","_useState9","_useState10","activeSect","setActiveSect","_useState11","_useState12","setSelectedSect","_useState13","_useState14","_jsxs","_Fragment","children","_jsx","ToastContainer","className","CForm","noValidate","onSubmit","e","preventDefault","form","currentTarget","_e$target","target","name","description","meta_title","meta_description","status","checkValidity","stopPropagation","requestOptions","method","headers","body","JSON","stringify","page_name","value","page_description","fetch","process","then","response","json","result","toast","success","message","data","reset","error","catch","console","log","CRow","CCol","lg","CCard","CCardBody","CFormInput","type","defaultValue","feedbackInvalid","id","label","required","CFormTextarea","rows","CFormSelect","CButton","color","CInputGroup","CFormLabel","CIcon","icon","cilX","customClassName","onClick","BiCarousel","BiBookContent","cilPlus"],"sourceRoot":""}