{"version":3,"file":"static/js/445.b57bb281.chunk.js","mappings":"sQA0UA,UAlUiB,WACf,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA2BT,EAAAA,EAAAA,UAAS,CAAC,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAAQF,EAAA,GACvBG,GAA0Bb,EAAAA,EAAAA,UAAS,CAAC,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCjB,EAAAA,EAAAA,UAAS,GAAEkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA6BrB,EAAAA,EAAAA,UAAS,IAAGsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAWF,EAAA,GACnBG,GAAUC,EAAAA,EAAAA,MACTC,GAAIC,EAAAA,EAAAA,MAAJD,IAMPE,EAAAA,EAAAA,YAAU,WAORC,MADWC,oDALU,CACnBC,OAAQ,OACRC,SAAU,WAKTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAM,OAAIjC,EAASiC,EAAOC,KAAK,IACpCC,OAAM,SAAAxB,GAAK,OAAIyB,QAAQC,IAAI,QAAS1B,EAAM,GAC/C,GAAG,IAEH,IAAM2B,EAAe,SAACC,EAAGC,GACrB,IAAIC,GAAOC,EAAAA,EAAAA,GAAA,GAAMnC,GACjBkC,EAAQD,GAAGD,EAAEI,OAAOC,MACpBpC,EAASiC,EACb,EAoJA,OArBAhB,EAAAA,EAAAA,YAAU,WACR,IAAMoB,EAAiB,CACrBjB,OAAQ,OACRkB,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACnB,IAAO1B,IAETM,SAAU,UAGZH,MAAMC,mDAA2CkB,GAC9Cf,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GACJ7B,EAAQ6B,EAAOC,KAAK,GAAGgB,YACvB9B,EAAYa,EAAOC,KAAK,GAAGiB,UAE7B,IACChB,OAAM,SAAAxB,GAAK,OAAIyB,QAAQC,IAAI,QAAS1B,EAAM,GAC/C,GAAG,KAIDyC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KACbD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,yDAAwDH,UACrEC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcH,SAAC,iBAE/BC,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAAAJ,UACJC,EAAAA,EAAAA,KAACI,EAAAA,GAAS,CAACF,UAAU,MAAKH,UACxBF,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAAAN,SAAA,EACHF,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,GAAI,GAAIL,UAAU,OAAMH,SAAA,EAC5BC,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,CAACC,MAAM,kBAAkBC,YAAY,kBAAkBC,SAlL9D,SAACC,GACjB/C,EAAY+C,EAAExB,OAAOC,MACtB,EAgLmGwB,aAAcjD,KACpGoC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAEjBL,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACC,GAAI,EAAER,SAAA,EACZF,EAAAA,EAAAA,MAACiB,EAAAA,GAAI,CAACC,QAAQ,OAAOC,KAAK,UAASjB,SAAA,EACjCC,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAACD,KAAK,eAAcjB,UAC3BC,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CACPC,OAAsB,IAAd3D,EACR4D,UAAU,SACVJ,KAAK,MACL,gBAAc,gBACd,gBAA6B,IAAdxD,EACf6D,QAAS,kBAAM5D,EAAa,EAAE,EAACsC,SAChC,aAIHC,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAACD,KAAK,eAAcjB,UAC3BC,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CACPC,OAAsB,IAAd3D,EACR4D,UAAU,SACVJ,KAAK,MACL,gBAAc,mBACd,gBAA6B,IAAdxD,EACf6D,QAAS,kBAAM5D,EAAa,EAAE,EAACsC,SAChC,sBAMPF,EAAAA,EAAAA,MAACyB,EAAAA,GAAW,CAAAvB,SAAA,EACVC,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAACP,KAAK,WAAW,kBAAgB,gBAAgBQ,QAAuB,IAAdhE,EAAgBuC,UACjFF,EAAAA,EAAAA,MAAC4B,EAAAA,GAAK,CAACC,SArJI,SAACd,GACtBA,EAAEe,iBACF,IAAIC,GAAS,EACTxE,EAAQ,CAAC,EACbyE,GAAAtF,EAAAA,EAAAA,GAA+BqE,EAAExB,OAAM,GAAhC0C,EAAID,EAAA,GAAUzC,GAADyC,EAAA,GAAOA,EAAA,IAEvBC,EAAKzC,QACPjC,EAAM0E,KAAO,2BACbF,GAAS,GAEXvE,EAASD,GACT,IAAI2E,EAAYvF,EAAMwF,SAASF,EAAKzC,QAChC4C,EAAU,CACZC,KAAMH,EAAUI,UAChBC,KAAKL,EAAUM,UACfjD,OAAOA,EAAOC,OAAO,IAEvB,GAAGuC,EAED,OADAU,EAAAA,GAAMlF,MAAM,gCACL,EAGJJ,EAAOuF,OACR1F,GAAQ,SAAA2F,GACN,IAAIC,EAAcT,SAAShF,EAAOuF,QAC5BG,EAASF,EAAKC,GAAaE,MAMjC,OAJEH,EAAKC,GAAaE,MADjBD,EACsB,GAAAE,QAAAC,EAAAA,EAAAA,GAAOH,GAAM,CAAET,IAEZ,CAACA,GAEtBO,CACT,IAEA3F,GAAQ,SAAA2F,GAAI,SAAAI,QAAAC,EAAAA,EAAAA,GAAML,GAAI,CAAEP,GAAO,IAGnCrB,EAAExB,OAAO0D,OACX,EA+G6C5C,UAAU,eAAcH,SAAA,EACvDC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAW,CAAC7C,UAAU,OAAOO,MAAM,gBAAgByB,KAAK,OAAMnC,SAC5DvD,EAAMwG,KAAI,SAACC,EAAMC,GAAG,OACnBlD,EAAAA,EAAAA,KAAA,UAAkBX,MAAO6D,EAAInD,SAAEkD,EAAKd,WAAvBe,EAA0C,OAG3DrD,EAAAA,EAAAA,MAACkD,EAAAA,GAAW,CAAC7C,UAAU,OAAOO,MAAM,qBAAqBE,SAAU,SAACC,GAAC,OAAG7B,EAAa6B,EAAG,SAAS,EAACb,SAAA,EAChGC,EAAAA,EAAAA,KAAA,aACCpD,EAAKoG,KAAI,SAACC,EAAMC,GAAG,OAClBlD,EAAAA,EAAAA,KAAA,UAAkBX,MAAO6D,EAAInD,SAAEkD,EAAKf,MAAvBgB,EAAqC,QAGtDrD,EAAAA,EAAAA,MAACkD,EAAAA,GAAW,CAAE7C,UAAU,OAAOO,MAAM,gBAAiByB,KAAK,SAAQnC,SAAA,EACjEC,EAAAA,EAAAA,KAAA,UAAQX,MAAM,MACdW,EAAAA,EAAAA,KAAA,UAAQX,MAAO,SAASU,SAAC,wBAE3BC,EAAAA,EAAAA,KAACmD,EAAAA,GAAO,CAACC,MAAM,OAAOC,KAAK,SAAQtD,SAAC,sBAGxCC,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAACP,KAAK,WAAW,kBAAgB,mBAAmBQ,QAAuB,IAAdhE,EAAgBuC,UACpFF,EAAAA,EAAAA,MAAC4B,EAAAA,GAAK,CAACC,SAjNK,SAACd,GACxBA,EAAEe,iBACF,IAAA2B,GAAA/G,EAAAA,EAAAA,GAA4DqE,EAAExB,OAAM,GAA7DmE,EAAeD,EAAA,GAAEE,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAAEf,EAAMe,EAAA,GACpD1B,GAAS,EACTxE,EAAQ,CAAC,EACP6E,EAAU,CACdC,KAAKqB,EAAgBlE,MACrB+C,KAAMoB,EAAWnE,MACjBD,OAAOqE,EAAcpE,OAAO,IAE1BmE,EAAWnE,QACbjC,EAAMoG,WAAa,mBACnB5B,GAAS,GAEP2B,EAAgBlE,QAClBjC,EAAMmG,gBAAkB,0BACxB3B,GAAS,GAEXvE,EAASD,GACLwE,IACCW,EAAOlD,MACRxC,GAAQ,SAAA2F,GACN,IAAIC,EAAcT,SAAShF,EAAOuF,QAC5BG,EAASF,EAAKC,GAAaE,MAMjC,OAJEH,EAAKC,GAAaE,MADjBD,EACsB,GAAAE,QAAAC,EAAAA,EAAAA,GAAOH,GAAM,CAAET,IAEZ,CAACA,GAEtBO,CACT,IAGA3F,GAAQ,SAAA2F,GAAI,SAAAI,QAAAC,EAAAA,EAAAA,GAAML,GAAI,CAAEP,GAAO,IAEjCpD,QAAQC,IAAImD,GACZrB,EAAExB,OAAO0D,QAEb,EA2K8C5C,UAAU,eAAcH,SAAA,EACxDC,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,CAACN,UAAU,OAAOO,MAAM,YAAYyB,KAAK,qBACpDlC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,QAAOH,SAAE3C,EAAMmG,mBAC9BvD,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,CAAC6C,KAAK,OAAOnD,UAAU,OAAOO,MAAM,OAAOyB,KAAK,gBAC3DlC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,QAAOH,SAAE3C,EAAMoG,cAC9B3D,EAAAA,EAAAA,MAACkD,EAAAA,GAAW,CAAE7C,UAAU,OAAOO,MAAM,gBAAgByB,KAAK,gBAAenC,SAAA,EACvEC,EAAAA,EAAAA,KAAA,UAAQX,MAAM,MACdW,EAAAA,EAAAA,KAAA,UAAQX,MAAO,SAASU,SAAC,wBAE3BF,EAAAA,EAAAA,MAACkD,EAAAA,GAAW,CAAC7C,UAAU,OAAOO,MAAM,qBAAqByB,KAAK,SAASvB,SAAU,SAACC,GAAC,OAAG7B,EAAa6B,EAAG,SAAS,EAACb,SAAA,EAC9GC,EAAAA,EAAAA,KAAA,aACCpD,EAAKoG,KAAI,SAACC,EAAMC,GAAG,OAClBlD,EAAAA,EAAAA,KAAA,UAAkBX,MAAO6D,EAAInD,SAAEkD,EAAKf,MAAvBgB,EAAqC,QAGtDlD,EAAAA,EAAAA,KAACmD,EAAAA,GAAO,CAACC,MAAM,OAAOC,KAAK,SAAQtD,SAAC,4BAqBxCC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAER,UACZF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcH,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SACGnD,EAAKoG,KAAI,SAAChE,EAAEC,GAAC,OACZY,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,mBAAkBH,SAAA,CAC9Bf,EAAEkD,MACHlC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAYmB,QAAS,kBA/IzC,SAACpC,GAClBpC,GAAQ,SAAA2F,GAEN,OADAA,EAAKkB,OAAOzE,EAAG,IACf4D,EAAAA,EAAAA,GAAWL,EACb,GACF,CA0IgEmB,CAAW1E,EAAE,EAACc,UACpDC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,KAAMC,EAAAA,SAGhB9E,EAAE2D,QACH3C,EAAAA,EAAAA,KAAA,MAAAD,SACI,OAADf,QAAC,IAADA,OAAC,EAADA,EAAG2D,MAAMK,KAAI,SAACC,EAAMC,GAAG,OACtBlD,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,mBAAkBH,SAAA,CAC9BkD,EAAKf,MACNlC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAYmB,QAAS,kBAlJ5C,SAACpC,EAAGiE,GACxBrG,GAAQ,SAAA2F,GAEN,OADAA,EAAKvD,GAAG0D,MAAMe,OAAOR,EAAK,IAC1BL,EAAAA,EAAAA,GAAWL,EACb,GACF,CA6IsEuB,CAAc9E,EAAGiE,EAAI,EAACnD,UAC5DC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAACC,KAAMC,EAAAA,UAJVZ,EAOJ,QAjBFjE,EAqBJ,cAMfe,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,GAAIL,UAAU,gBAAeH,UACrCC,EAAAA,EAAAA,KAACmD,EAAAA,GAAO,CAACC,MAAM,UAAUY,KAAK,KAAK3C,QAvM9B,WACXzD,GACF0E,EAAAA,GAAMlF,MAAM,2BAGhB,IAAIkC,EAAiB,CACnBjB,OAAQ,OACRkB,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACnBuE,IAAIjG,EACJ,UAAaJ,EACb,WAAchB,IAEhB0B,SAAU,UAGdH,MAAMC,qDAA6CkB,GAChDf,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GACJG,QAAQC,IAAIJ,GACM,KAAfA,EAAOwF,SACR5B,EAAAA,GAAM6B,QAAQ,cACdC,YAAW,WACTtG,EAAS,QACX,GAAG,KAEP,IACCc,OAAM,SAAAxB,GAAK,OAAIyB,QAAQC,IAAI,QAAS1B,EAAM,GAG3C,EAyKmE2C,SAAC,yBAQtE,C","sources":["views/CMS/menu/editMenu.js"],"sourcesContent":["import { cilPencil, cilTrash } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport { CButton, CCard, CCardBody, CCol, CForm, CFormInput, CFormSelect, CNav, CNavItem, CNavLink, CRow, CTabContent, CTabPane, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify'\nimport \"./menu.scss\"\n\nconst EditMenu = () => {\n  const [pages, setPages] = useState([]);\n  const [tree, setTree] = useState([]);\n  const [fields, setField] = useState({});\n  const [error, setError] = useState({});\n  const [activeKey, setActiveKey] = useState(1);\n  const [mName, setMenuName] = useState(\"\");\n  const Navigate =useNavigate();\n  const {id}=useParams();\n\n \n const menuName = (e)=>{\n  setMenuName(e.target.value)\n }\n  useEffect(() => {\n    var requestOptions = {\n      method: 'POST',\n      redirect: 'follow'\n    };\n\n    let url =  process.env.REACT_APP_API_URL+\"pages/list\"\n    fetch(url, requestOptions)\n      .then(response => response.json())\n      .then(result => setPages(result.data))\n      .catch(error => console.log('error', error));\n  }, []); \n  \n  const handleChange = (i, j)=>{\n      let tempObj ={...fields};\n      tempObj[j]=i.target.value;\n      setField(tempObj);\n  }\n\n  const handleAddCustom = (e)=>{ \n   e.preventDefault();\n   const [custom_menuName, custom_url, custom_target, parent]= e.target;   \n    let hasError=false;   \n    let error = {}  \n    const payload = {\n      name:custom_menuName.value, \n      slug: custom_url.value, \n      target:custom_target.value||\"\"     \n    };\n    if(!custom_url.value){\n      error.custom_url = \"Url not entered.\";  \n      hasError=true;    \n    }\n    if(!custom_menuName.value){\n      error.custom_menuName = \"Enter Custom menu name.\";   \n      hasError=true;  \n    } \n    setError(error);\n    if(!hasError){\n      if(parent.value){     \n        setTree(prev=>{\n          let parentIndex = parseInt(fields.parent);\n          const arinfo = prev[parentIndex].items;\n          if(arinfo){\n            prev[parentIndex].items = [...arinfo, payload]\n          }else{\n            prev[parentIndex].items = [payload]\n          } \n          return prev;\n        })\n      \n      }else{\n        setTree(prev=>[...prev, payload])\n      }\n      console.log(payload)\n      e.target.reset();\n    }\n  }\n\n  const handleAddPages = (e)=>{\n    e.preventDefault();\n    let hasError=false;   \n    let error = {}    \n    const [page, parent2,target] = e.target;\n    // console.log(page.value, parent2.value, target.value)\n    if(!page.value){\n      error.page = \"Please Select page name.\";   \n      hasError=true;    \n    } \n    setError(error);\n    let pagesName = pages[parseInt(page.value)];\n    let payload = {\n      name: pagesName.page_name,\n      slug:pagesName.page_slug,\n      target:target.value||\"\" \n    };\n    if(hasError){\n      toast.error(\"Please add require fields. \");\n      return false;\n    }else{\n\n      if(fields.parent){\n        setTree(prev=>{\n          let parentIndex = parseInt(fields.parent); \n          const arinfo = prev[parentIndex].items; \n          if(arinfo){\n            prev[parentIndex].items = [...arinfo, payload]\n          }else{\n            prev[parentIndex].items = [payload]\n          } \n          return prev;\n        })\n      }else{\n        setTree(prev=>[...prev, payload])\n      }\n    }\n    e.target.reset();    \n  }\n\nconst UpdateMenu = () =>{\n    if(!mName){\n      toast.error(\"Please enter menu name.\");\n    }\n\n  let requestOptions = {\n    method: 'POST',\n    headers: {\"Content-Type\":\"application/json\"},\n    body: JSON.stringify({\n      _id:id,\n      \"menu_name\": mName,\n      \"menu_items\": tree\n    }),\n    redirect: 'follow'\n  };\n\nfetch(process.env.REACT_APP_API_URL+\"menu/update\", requestOptions)\n  .then(response => response.json())\n  .then(result => {\n    console.log(result)\n    if(result.status==200){\n      toast.success(\"Menu added\");\n      setTimeout(function(){\n        Navigate(\"/menu\");\n      }, 300)\n    }\n  })                                                                                                                                                                                                                                                                                                                                    \n  .catch(error => console.log('error', error));\n\n\n  }\n  const removeMenu = (j) => {\n    setTree(prev => {\n      prev.splice(j, 1); \n      return [...prev]; \n    });\n  }\n  \n  const removeSubMenu = (j, key) =>{\n    setTree(prev => {\n      prev[j].items.splice(key, 1); \n      return [...prev]; \n    });\n  }\n\n  useEffect(()=>{\n    const requestOptions = {\n      method: 'POST',\n      headers: {\"Content-Type\":\"application/json\"},\n      body: JSON.stringify({\n        \"_id\": id\n      }),\n      redirect: 'follow'\n    };\n\n    fetch(process.env.REACT_APP_API_URL+\"menu/list\", requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        setTree(result.data[0].menu_items);\n        setMenuName(result.data[0].menu_name);\n        // setMenuName();\n      })\n      .catch(error => console.log('error', error));\n  }, [])\n\n\n  return (\n    <>\n    <ToastContainer />\n      <div className='d-flex justify-content-start  align-items-center  mb-4'>\n        <h1 className='headingType1'>Edit Menu</h1>        \n      </div>\n      <CCard>\n        <CCardBody className='p-5'>\n          <CRow>\n            <CCol lg={12} className='mb-4'>\n              <CFormInput label=\"Enter Menu Name\" placeholder='Enter Menu Name' onChange={menuName} defaultValue={mName}/>\n              <div className='error'></div>\n            </CCol>\n            <CCol lg={5}>\n            <CNav variant=\"tabs\" role=\"tablist\">\n              <CNavItem role=\"presentation\">\n                <CNavLink\n                  active={activeKey === 1}\n                  component=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"home-tab-pane\"\n                  aria-selected={activeKey === 1}\n                  onClick={() => setActiveKey(1)}\n                >\n                  Pages\n                </CNavLink>\n              </CNavItem>\n              <CNavItem role=\"presentation\">\n                <CNavLink\n                  active={activeKey === 2}\n                  component=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"profile-tab-pane\"\n                  aria-selected={activeKey === 2}\n                  onClick={() => setActiveKey(2)}\n                >\n                  Custom Link\n                </CNavLink>\n              </CNavItem>\n            \n          </CNav>\n          <CTabContent>\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"home-tab-pane\" visible={activeKey === 1}>\n              <CForm onSubmit={handleAddPages} className='addToMenuBox'>\n                <CFormSelect className='mb-4' label=\"Select a Page\" name='page'>                \n                  {pages.map((item, key)=>(\n                    <option key={key} value={key}>{item.page_name}</option>\n                  ))}                \n                </CFormSelect>\n                <CFormSelect className='mb-4' label=\"Select Parent Menu\" onChange={(e)=>handleChange(e, \"parent\")}>\n                  <option></option>\n                  {tree.map((item, key)=>(\n                    <option key={key} value={key}>{item.name}</option>\n                  ))}                \n                </CFormSelect>\n                <CFormSelect  className='mb-4' label=\"Select Target\"  name='target'>\n                  <option value=\"\"></option>\n                  <option value={\"_blank\"}>Open In new tab</option>\n                </CFormSelect>\n                <CButton color='info' type='submit'>Add to Menu</CButton>\n              </CForm>\n            </CTabPane>\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"profile-tab-pane\" visible={activeKey === 2}>            \n              <CForm onSubmit={handleAddCustom} className='addToMenuBox'>\n                <CFormInput className='mb-4' label=\"Menu Name\" name='custom_menuName'/> \n                <div className='error'>{error.custom_menuName}</div>\n                <CFormInput type='text' className='mb-4' label=\"Link\" name='custom_url' />\n                <div className='error'>{error.custom_url}</div>\n                <CFormSelect  className='mb-4' label=\"Select Target\" name='custom_target'>\n                  <option value=\"\"></option>\n                  <option value={\"_blank\"}>Open In new tab</option>\n                </CFormSelect>\n                <CFormSelect className='mb-4' label=\"Select Parent Menu\" name='parent' onChange={(e)=>handleChange(e, \"parent\")}>\n                  <option></option>\n                  {tree.map((item, key)=>(\n                    <option key={key} value={key}>{item.name}</option>\n                  ))}                \n                </CFormSelect>\n                <CButton color='info' type='submit'>Add to Menu</CButton>\n              </CForm>\n            </CTabPane>\n          </CTabContent>\n\n\n\n              \n              \n              {/* <div className=\"leftMenuList\">\n                <ul>\n                  <li><a href=\"#\">Home</a></li>\n                  <li><a href=\"#\">About Counselling and Psychotherapy...</a></li>\n                  <li><a href=\"#\">About Me</a></li>\n                  <li><a href=\"#\">FAQs</a></li>\n                  <li><a href=\"#\">Links</a></li>\n                  <li><a href=\"#\">Location</a></li>\n                  <li><a href=\"#\">Privacy Notice</a></li>\n                </ul>\n              </div> */}\n            </CCol>\n            <CCol lg={7}>\n            <div className=\"menu_right_form\">\n                <h2>Menu Tree</h2>\n                <div className=\"menuListWrap\">\n                  <ul>\n                    {tree.map((i,j)=>(\n                      <li key={j}>\n                        <div className=\"menuOrderingEach\">\n                          {i.name}  \n                          <div className='trashIcon' onClick={()=>removeMenu(j)}>\n                            <CIcon icon={cilTrash}/>\n                          </div>                        \n                        </div>\n                        {i.items&&(\n                        <ul>\n                          {i?.items.map((item, key)=>(\n                            <li key={key}>\n                              <div className=\"menuOrderingEach\">\n                                {item.name}  \n                                <div className='trashIcon' onClick={()=>removeSubMenu(j, key)}>\n                                  <CIcon icon={cilTrash}/>\n                                </div>                         \n                              </div>\n                            </li> \n                          ))}\n                                                 \n                        </ul>  )}                                   \n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </CCol>\n            <CCol lg={12} className='text-end mt-4'>\n              <CButton color='primary' size='lg' onClick={UpdateMenu}>Save Menu</CButton>\n            </CCol>\n          </CRow>\n          \n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default EditMenu\n"],"names":["_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","tree","setTree","_useState5","_useState6","fields","setField","_useState7","_useState8","error","setError","_useState9","_useState10","activeKey","setActiveKey","_useState11","_useState12","mName","setMenuName","Navigate","useNavigate","id","useParams","useEffect","fetch","process","method","redirect","then","response","json","result","data","catch","console","log","handleChange","i","j","tempObj","_objectSpread","target","value","requestOptions","headers","body","JSON","stringify","menu_items","menu_name","_jsxs","_Fragment","children","_jsx","ToastContainer","className","CCard","CCardBody","CRow","CCol","lg","CFormInput","label","placeholder","onChange","e","defaultValue","CNav","variant","role","CNavItem","CNavLink","active","component","onClick","CTabContent","CTabPane","visible","CForm","onSubmit","preventDefault","hasError","_e$target2","page","pagesName","parseInt","payload","name","page_name","slug","page_slug","toast","parent","prev","parentIndex","arinfo","items","concat","_toConsumableArray","reset","CFormSelect","map","item","key","CButton","color","type","_e$target","custom_menuName","custom_url","custom_target","splice","removeMenu","CIcon","icon","cilTrash","removeSubMenu","size","_id","status","success","setTimeout"],"sourceRoot":""}