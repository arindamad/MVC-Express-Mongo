{"version":3,"file":"static/js/514.e666e269.chunk.js","mappings":"oPAsFA,UA7EoB,WAClB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GA6BR,OA3BAE,EAAAA,EAAAA,YAAU,WACRC,MAAMC,4CAA6C,CAC/CC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAEA,EAAEC,UAAQF,MAAK,SAACG,GACvBC,QAAQC,IAAIF,EAAKA,KAAKG,QAAO,SAAAC,GAAC,OAAEA,EAAEC,MAAMf,KAAI,IAC5CH,EAAUa,EAAKA,KAAKG,QAAO,SAAAC,GAAC,OAAEA,EAAEC,MAAMf,KAAI,OAG9CG,MAAMC,0CAA2C,CAC7CC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAEA,EAAEC,UAAQF,MAAK,SAACG,GACvBC,QAAQC,IAAIF,EAAKA,KAAKG,QAAO,SAAAC,GAEzBH,QAAQC,IAAI,SAAUE,EAAElB,OAAQ,QAASI,OAG7CD,EAAQW,EAAKA,WAEhB,KAGK,+BACN,iBAAKM,UAAU,iBAAf,WACI,wBAAKpB,EAAOqB,eACZ,gBAAIC,MAAO,CAACC,YAAY,GAAxB,WACI,gBAAIH,UAAU,UAAd,WACI,mBAAQA,UAAU,OAAlB,4BADJ,IACsDpB,EAAOwB,iBAE7D,gBAAIJ,UAAU,SAAd,WACI,mBAAQA,UAAU,OAAlB,4BADJ,IACsDpB,EAAOyB,iBAE7D,gBAAIL,UAAU,SAAd,WACI,mBAAQA,UAAU,OAAlB,4BADJ,IACsDpB,EAAO0B,WAD7D,IAC0E,IAD1E,IACgF1B,EAAO2B,iBAG3F,gBAAKP,UAAU,YAAf,UACI,UAAC,KAAD,CAAQQ,SAAO,EAACC,UAAQ,EAAxB,WACI,SAAC,IAAD,WACI,UAAC,KAAD,YACA,SAAC,KAAD,CAAkBC,MAAO,IAAKC,MAAM,MAApC,sBACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,0BACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,yBACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,uBACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,kBACA,SAAC,KAAD,CAAkBA,MAAM,MAAxB,0BAGJ,SAAC,KAAD,UACK7B,EAAK8B,KAAI,SAACd,EAAGe,GAAJ,OACN,UAAC,KAAD,YACI,SAAC,KAAD,CAAgBF,MAAM,MAAtB,SAA6Bb,EAAEC,OAC/B,UAAC,KAAD,kBAAsBD,EAAEgB,QAAW,gCAAQhB,EAAEgB,OAAOR,WAAjB,IAA8B,IAA9B,IAAoCR,EAAEgB,OAAOP,aAAjD,GAA/B,QACA,SAAC,KAAD,UAAiBT,EAAEiB,cACnB,SAAC,KAAD,UAAiBjB,EAAEkB,YACnB,SAAC,KAAD,UAAiBlB,EAAEmB,YACnB,SAAC,KAAD,WAAgB,mBAAQjB,UAAWF,EAAEoB,OAAO,kBAAkB,kBAA9C,SAAkEpB,EAAEoB,OAAO,SAAS,gBANxFL,oB","sources":["views/clinic/clinic_details.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { CButton, CCol, CFormInput, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\n\nimport './clinic.scss';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\n\n\nconst ClinicDetails=()=> {\n  const [clinic, setDoctor] = useState({});\n  const [slot, setSlot] = useState([]);\n  \n  const { id } = useParams();\n    \n  useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL+\"clinic/list\", {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(e=>e.json()).then((data)=>{\n        console.log(data.data.filter(i=>i._id===id)[0]);\n        setDoctor(data.data.filter(i=>i._id===id)[0]);\n    })\n\n    fetch(process.env.REACT_APP_API_URL+\"slot/list\", {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(e=>e.json()).then((data)=>{\n        console.log(data.data.filter(i=>{\n            // i.clinic === id\n            console.log(\"forein\", i.clinic, 'local', id)\n            \n        }));\n        setSlot(data.data);\n    });\n  }, [])\n  \n\n  return (<>\n    <div className='clinic_details'>\n        <h1>{clinic.clinic_name}</h1>\n        <ul style={{paddingLeft:0}}>\n            <li className='d-flex '> \n                <strong className='me-3'>Clinic email: </strong> {clinic.clinic_email}\n            </li>\n            <li className='d-flex'> \n                <strong className='me-3'>Clinic Phone: </strong> {clinic.clinic_phone}\n            </li>\n            <li className='d-flex'> \n                <strong className='me-3'>Clinic Owner: </strong> {clinic.first_name} {\" \"} {clinic.last_name}\n            </li>\n        </ul>\n        <div className='SlotLists'>\n            <CTable striped bordered>\n                <CTableHead>\n                    <CTableRow>\n                    <CTableHeaderCell width={100} scope=\"col\">Slot Id</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Doctor Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Slot Start</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Slot End</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Day</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                    </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                    {slot.map((i, k)=>(\n                        <CTableRow key={k}>\n                            <CTableDataCell scope=\"row\">{i._id}</CTableDataCell>\n                            <CTableDataCell>Dr. {!i.doctor?\"\": <span> {i.doctor.first_name} {\" \"} {i.doctor.last_name}</span> } </CTableDataCell>\n                            <CTableDataCell>{i.start_time}</CTableDataCell>\n                            <CTableDataCell>{i.end_time}</CTableDataCell>\n                            <CTableDataCell>{i.day_name}</CTableDataCell>\n                            <CTableDataCell><button className={i.status?\"btn btn-success\":\"btn btn-primary\"}>{i.status?\"Active\":\"Pending\"}</button></CTableDataCell>                   \n                        </CTableRow>\n                    ))}                \n                </CTableBody>\n            </CTable>\n        </div>\n    </div>\n    </>\n  )\n}\nexport default ClinicDetails;"],"names":["useState","clinic","setDoctor","slot","setSlot","id","useParams","useEffect","fetch","process","method","headers","then","e","json","data","console","log","filter","i","_id","className","clinic_name","style","paddingLeft","clinic_email","clinic_phone","first_name","last_name","striped","bordered","width","scope","map","k","doctor","start_time","end_time","day_name","status"],"sourceRoot":""}