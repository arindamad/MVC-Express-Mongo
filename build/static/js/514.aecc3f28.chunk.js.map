{"version":3,"file":"static/js/514.aecc3f28.chunk.js","mappings":"sPA+HA,UAzHsB,WACpB,IAAAA,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GA6C9B,OAjBAI,EAAAA,EAAAA,YAAU,WAQRC,MADWC,8CALU,CACnBC,OAAQ,OACRC,SAAU,WAKTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAYT,EAAaS,EAAOC,KAAM,IAC3CC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,EAAM,GAE/C,GAAG,KAKDG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KACfJ,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAACC,UAAU,yBAAwBJ,SAAA,EACpCC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,IAAE,EAAAN,UACNC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,oBAAmBJ,SAAC,gBAEpCC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,aAKbL,EAAAA,EAAAA,KAACM,EAAAA,GAAK,CAAAP,UACFC,EAAAA,EAAAA,KAACO,EAAAA,GAAS,CAAAR,UACNC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,UAAU,yBAAwBJ,UACtCC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAI,GAAGN,UACbF,EAAAA,EAAAA,MAACW,EAAAA,GAAM,CAACC,UAAQ,EAACC,SAAO,EAAAX,SAAA,EACtBC,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAZ,UACTF,EAAAA,EAAAA,MAACe,EAAAA,GAAS,CAAAb,SAAA,EACRC,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAAAd,SAAC,gBAGlBC,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAO,IAAIf,SAAC,UAG9BC,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAAAd,SAAC,WAGlBC,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAAAd,SAAC,WAIlBC,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAO,IAAIf,SAAC,aAG9BC,EAAAA,EAAAA,KAACa,EAAAA,GAAgB,CAACC,MAAO,IAAIf,SAAC,kBAKpCC,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAAAhB,SACRlB,EAAUmC,KAAI,SAACC,EAAGC,GAAG,OACtBrB,EAAAA,EAAAA,MAACe,EAAAA,GAAS,CAAAb,SAAA,EACRC,EAAAA,EAAAA,KAACmB,EAAAA,GAAc,CAAApB,SACZkB,EAAEG,cAELpB,EAAAA,EAAAA,KAACmB,EAAAA,GAAc,CAAApB,SACZkB,EAAEI,QAELrB,EAAAA,EAAAA,KAACmB,EAAAA,GAAc,CAAApB,SACZkB,EAAEK,SAELtB,EAAAA,EAAAA,KAACmB,EAAAA,GAAc,CAAApB,SACZkB,EAAEM,SAELvB,EAAAA,EAAAA,KAACmB,EAAAA,GAAc,CAAApB,SACZkB,EAAEO,WAELxB,EAAAA,EAAAA,KAACmB,EAAAA,GAAc,CAAApB,SACZkB,EAAEQ,YAjBSP,EAmBJ,mBAY9B,C","sources":["views/enquiries/Enquiries.js"],"sourcesContent":["import { CButton, CCard, CCardBody, CCol, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify'\nimport { DataTable } from 'src/components';\n\nconst EnquiriesList = () => {\n  const [enquiries, setEnquiries] = useState([]);\n\n  const handleDelete = (itemId) => { \n    const arconfirm = confirm(\"Are you sure you want to delete this?\")\n    if(!arconfirm){\n      return;\n    }\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\"_id\": itemId}),\n      redirect: 'follow'\n    };\n    fetch(process.env.REACT_APP_API_URL+\"category/delete\", requestOptions)\n      .then(response => response.json())\n      .then(result => {       \n          toast.success(result.message);        \n      })\n      .catch(error => {\n        console.error(error)\n        toast.error(error.message);        \n      });\n\n  };\n\n\n  useEffect(() => {\n\n    var requestOptions = { \n      method: 'POST',\n      redirect: 'follow'\n    };\n\n    let url =  process.env.REACT_APP_API_URL+\"enquire/list\"\n    fetch(url, requestOptions)\n      .then(response => response.json())\n      .then(result => { setEnquiries(result.data) })\n      .catch(error => console.log('error', error));\n\n  }, []);\n\n\n\n  return (\n    <>\n      <ToastContainer />\n      <CRow className='justify-content-center'>                \n          <CCol lg>\n            <h1 className='headingType1 mb-4'>Enquires</h1>\n          </CCol>\n          <CCol lg=\"auto\">\n            {/* <Link to={'/pages/add'} className='btn btn-primary'>Add</Link> */}\n          </CCol>        \n      </CRow>\n      \n      <CCard >            \n          <CCardBody>              \n              <CRow className='justify-content-center'>                \n                <CCol lg={12}>\n                <CTable bordered striped>\n                  <CTableHead>\n                    <CTableRow>      \n                      <CTableHeaderCell>\n                        Enquire Id\n                      </CTableHeaderCell>                \n                      <CTableHeaderCell width={150}>\n                        Name\n                      </CTableHeaderCell>\n                      <CTableHeaderCell>\n                        Phone \n                      </CTableHeaderCell> \n                      <CTableHeaderCell>\n                        Email\n                      </CTableHeaderCell>\n                      \n                      <CTableHeaderCell width={100}>\n                        Subject\n                      </CTableHeaderCell>\n                      <CTableHeaderCell width={200}>\n                        Message\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                <CTableBody>\n                  {enquiries.map((i, key) => (\n                  <CTableRow key={key}>\n                    <CTableDataCell>\n                      {i.enquire_id}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {i.name}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {i.email}\n                    </CTableDataCell>   \n                    <CTableDataCell>\n                      {i.phone}\n                    </CTableDataCell>               \n                    <CTableDataCell>\n                      {i.subject}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      {i.message}\n                    </CTableDataCell>\n                  </CTableRow>\n                ))}\n                </CTableBody>\n                </CTable>\n\n                </CCol>\n              </CRow>\n              \n          </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default EnquiriesList\n"],"names":["_useState","useState","_useState2","_slicedToArray","enquiries","setEnquiries","useEffect","fetch","process","method","redirect","then","response","json","result","data","catch","error","console","log","_jsxs","_Fragment","children","_jsx","ToastContainer","CRow","className","CCol","lg","CCard","CCardBody","CTable","bordered","striped","CTableHead","CTableRow","CTableHeaderCell","width","CTableBody","map","i","key","CTableDataCell","enquire_id","name","email","phone","subject","message"],"sourceRoot":""}