{"version":3,"file":"static/js/161.da955396.chunk.js","mappings":"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","sources":["views/CMS/menu/addMenu.js"],"sourcesContent":["import { cilPencil, cilTrash } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport { CButton, CCard, CCardBody, CCol, CForm, CFormInput, CFormSelect, CNav, CNavItem, CNavLink, CRow, CTabContent, CTabPane, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify'\nimport \"./menu.scss\"\n\nconst AddMenu = () => {\n  const [pages, setPages] = useState([]);\n  const [tree, setTree] = useState([]);\n  const [fields, setField] = useState({});\n  const [error, setError] = useState({});\n  const [activeKey, setActiveKey] = useState(1);\n  const [mName, setMenuName] = useState(\"\");\n  const Navigate =useNavigate();\n \n const menuName = (e)=>{\n  setMenuName(e.target.value)\n }\n  useEffect(() => {\n    var requestOptions = {\n      method: 'POST',\n      redirect: 'follow'\n    };\n\n    let url =  process.env.REACT_APP_API_URL+\"pages/list\"\n    fetch(url, requestOptions)\n      .then(response => response.json())\n      .then(result => { setPages(result.data)})\n      .catch(error => console.log('error', error));\n  }, []); \n  \n  const handleChange = (i, j)=>{\n      let tempObj ={...fields};\n      tempObj[j]=i.target.value;\n      setField(tempObj);\n  }\n\n  const handleAddCustom = (e)=>{ \n   e.preventDefault();\n   const [custom_menuName, custom_url, custom_target, parent]= e.target;   \n    let hasError=false;   \n    let error = {}  \n    const payload = {\n      name:custom_menuName.value, \n      slug: custom_url.value, \n      target:custom_target.value||\"\"     \n    };\n    if(!custom_url.value){\n      error.custom_url = \"Url not entered.\";  \n      hasError=true;    \n    }\n    if(!custom_menuName.value){\n      error.custom_menuName = \"Enter Custom menu name.\";   \n      hasError=true;  \n    } \n    setError(error);\n    if(!hasError){       \n      if(parent.value){\n        console.log(parent.value);       \n        setTree(prev=>{\n          let parentIndex = parseInt(fields.parent);\n          const arinfo = prev[parentIndex].items;\n          console.log(prev, arinfo);\n          debugger;\n          if(arinfo){\n            prev[parentIndex].items = [...arinfo, payload]\n          }else{\n            prev[parentIndex].items = [payload]\n          } \n          return prev;\n        })\n      \n      }else{\n        setTree(prev=>[...prev, payload])\n      }\n      console.log(payload)\n      e.target.reset();\n    }\n  }\n\n  const handleAddPages = (e)=>{\n    e.preventDefault();\n    let hasError=false;   \n    let error = {}    \n    const [page, parent2,target] = e.target;\n    // console.log(page.value, parent2.value, target.value)\n    if(!page.value){\n      error.page = \"Please Select page name.\";   \n      hasError=true;    \n    } \n    setError(error);\n    let pagesName = pages[parseInt(page.value)];\n    let payload = {\n      name: pagesName.page_name,\n      slug:pagesName.page_slug,\n      target:target.value||\"\" \n    };\n    if(hasError){\n      toast.error(\"Please add require fields. \");\n      return false;\n    }else{\n\n      if(fields.parent){\n        setTree(prev=>{\n          let parentIndex = parseInt(fields.parent); \n          const arinfo = prev[parentIndex].items; \n          if(arinfo){\n            prev[parentIndex].items = [...arinfo, payload]\n          }else{\n            prev[parentIndex].items = [payload]\n          } \n          return prev;\n        })\n      }else{\n        setTree(prev=>[...prev, payload])\n      }\n    }\n    e.target.reset();    \n  }\n\n  const handleCreate = () =>{\n    if(!mName){\n      toast.error(\"Please enter menu name.\");\n    }\n\n  let requestOptions = {\n    method: 'POST',\n    headers: {\"Content-Type\":\"application/json\"},\n    body: JSON.stringify({\n      \"menu_name\": mName,\n      \"menu_items\": tree\n    }),\n    redirect: 'follow'\n  };\n\nfetch(process.env.REACT_APP_API_URL+\"menu/create\", requestOptions)\n  .then(response => response.json())\n  .then(result => {\n    console.log(result)\n    if(result.status==200){\n      toast.success(\"Menu added\");\n      setTimeout(function(){\n        Navigate(\"/menu\");\n      }, 300)\n    }\n  })                                                                                                                                                                                                                                                                                                                                    \n  .catch(error => console.log('error', error));\n\n\n  }\n  const removeMenu = (j) => {\n    setTree(prev => {\n      prev.splice(j, 1); \n      return [...prev]; \n    });\n  }\n  \n  const removeSubMenu = (j, key) =>{\n    setTree(prev => {\n      prev[j].items.splice(key, 1); \n      return [...prev]; \n    });\n  }\n  return (\n    <>\n    <ToastContainer />\n      <div className='d-flex justify-content-start  align-items-center  mb-4'>\n        <h1 className='headingType1'>Add Menu</h1>        \n      </div>\n      <CCard>\n        <CCardBody className='p-5'>\n          <CRow>\n            <CCol lg={12} className='mb-4'>\n              <CFormInput label=\"Enter Menu Name\" placeholder='Enter Menu Name' onChange={menuName}/>\n              <div className='error'></div>\n            </CCol>\n            <CCol lg={5}>\n            <CNav variant=\"tabs\" role=\"tablist\">\n              <CNavItem role=\"presentation\">\n                <CNavLink\n                  active={activeKey === 1}\n                  component=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"home-tab-pane\"\n                  aria-selected={activeKey === 1}\n                  onClick={() => setActiveKey(1)}\n                >\n                  Pages\n                </CNavLink>\n              </CNavItem>\n              <CNavItem role=\"presentation\">\n                <CNavLink\n                  active={activeKey === 2}\n                  component=\"button\"\n                  role=\"tab\"\n                  aria-controls=\"profile-tab-pane\"\n                  aria-selected={activeKey === 2}\n                  onClick={() => setActiveKey(2)}\n                >\n                  Custom Link\n                </CNavLink>\n              </CNavItem>\n            \n          </CNav>\n          <CTabContent>\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"home-tab-pane\" visible={activeKey === 1}>\n              <CForm onSubmit={handleAddPages} className='addToMenuBox'>\n                <CFormSelect className='mb-4' label=\"Select a Page\" name='page'>                \n                  {pages.map((item, key)=>(\n                    <option key={key} value={key}>{item.page_name}</option>\n                  ))}                \n                </CFormSelect>\n                <CFormSelect className='mb-4' label=\"Select Parent Menu\" onChange={(e)=>handleChange(e, \"parent\")}>\n                  <option></option>\n                  {tree.map((item, key)=>(\n                    <option key={key} value={key}>{item.name}</option>\n                  ))}                \n                </CFormSelect>\n                <CFormSelect  className='mb-4' label=\"Select Target\"  name='target'>\n                  <option value=\"\"></option>\n                  <option value={\"_blank\"}>Open In new tab</option>\n                </CFormSelect>\n                <CButton color='info' type='submit'>Add to Menu</CButton>\n              </CForm>\n            </CTabPane>\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"profile-tab-pane\" visible={activeKey === 2}>            \n              <CForm onSubmit={handleAddCustom} className='addToMenuBox'>\n                <CFormInput className='mb-4' label=\"Menu Name\" name='custom_menuName'/> \n                <div className='error'>{error.custom_menuName}</div>\n                <CFormInput type='text' className='mb-4' label=\"Link\" name='custom_url' />\n                <div className='error'>{error.custom_url}</div>\n                <CFormSelect  className='mb-4' label=\"Select Target\" name='custom_target'>\n                  <option value=\"\"></option>\n                  <option value={\"_blank\"}>Open In new tab</option>\n                </CFormSelect>\n                <CFormSelect className='mb-4' label=\"Select Parent Menu\" name='parent' onChange={(e)=>handleChange(e, \"parent\")}>\n                  <option></option>\n                  {tree.map((item, key)=>(\n                    <option key={key} value={key}>{item.name}</option>\n                  ))}                \n                </CFormSelect>\n                <CButton color='info' type='submit'>Add to Menu</CButton>\n              </CForm>\n            </CTabPane>\n          </CTabContent>\n\n\n\n              \n              \n              {/* <div className=\"leftMenuList\">\n                <ul>\n                  <li><a href=\"#\">Home</a></li>\n                  <li><a href=\"#\">About Counselling and Psychotherapy...</a></li>\n                  <li><a href=\"#\">About Me</a></li>\n                  <li><a href=\"#\">FAQs</a></li>\n                  <li><a href=\"#\">Links</a></li>\n                  <li><a href=\"#\">Location</a></li>\n                  <li><a href=\"#\">Privacy Notice</a></li>\n                </ul>\n              </div> */}\n            </CCol>\n            <CCol lg={7}>\n            <div className=\"menu_right_form\">\n                <h2>Menu Tree</h2>\n                <div className=\"menuListWrap\">\n                  <ul>\n                    {tree.map((i,j)=>(\n                      <li key={j}>\n                        <div className=\"menuOrderingEach\">\n                          {i.name}  \n                          <div className='trashIcon' onClick={()=>removeMenu(j)}>\n                            <CIcon icon={cilTrash}/>\n                          </div>                        \n                        </div>\n                        {i.items&&(\n                        <ul>\n                          {i?.items.map((item, key)=>(\n                            <li key={key}>\n                              <div className=\"menuOrderingEach\">\n                                {item.name}  \n                                <div className='trashIcon' onClick={()=>removeSubMenu(j, key)}>\n                                  <CIcon icon={cilTrash}/>\n                                </div>                         \n                              </div>\n                            </li> \n                          ))}\n                                                 \n                        </ul>  )}                                   \n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </CCol>\n            <CCol lg={12} className='text-end mt-4'>\n              <CButton color='primary' size='lg' onClick={handleCreate}>Create</CButton>\n            </CCol>\n          </CRow>\n          \n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default AddMenu\n"],"names":["_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","tree","setTree","_useState5","_useState6","fields","setField","_useState7","_useState8","error","setError","_useState9","_useState10","activeKey","setActiveKey","_useState11","_useState12","mName","setMenuName","Navigate","useNavigate","useEffect","fetch","process","method","redirect","then","response","json","result","data","catch","console","log","handleChange","i","j","tempObj","_objectSpread","target","value","_jsxs","_Fragment","children","_jsx","ToastContainer","className","CCard","CCardBody","CRow","CCol","lg","CFormInput","label","placeholder","onChange","e","CNav","variant","role","CNavItem","CNavLink","active","component","onClick","CTabContent","CTabPane","visible","CForm","onSubmit","preventDefault","hasError","_e$target2","page","pagesName","parseInt","payload","name","page_name","slug","page_slug","toast","parent","prev","parentIndex","arinfo","items","concat","_toConsumableArray","reset","CFormSelect","map","item","key","CButton","color","type","_e$target","custom_menuName","custom_url","custom_target","splice","removeMenu","CIcon","icon","cilTrash","removeSubMenu","size","requestOptions","headers","body","JSON","stringify","status","success","setTimeout"],"sourceRoot":""}